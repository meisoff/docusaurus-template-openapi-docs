openapi: 3.0.1
info:
  title: NopaperPartnerApi | +:80
  termsOfService: https://abanking.ru/
  contact:
    name: This is Contact
    url: https://abanking.ru/
  license:
    name: Tis is License
    url: https://abanking.ru/
  version: '2.0'
servers:
  - url: http://partner-api
paths:
  /api/v2/external/amo-crm/authorization/{clientId}/access-token:
    get:
      tags:
        - AmoCrmExternal
      summary: Получить акцес-токен для авторизации в амо-срм
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/cabinet/{alias}/user/list:
    get:
      tags:
        - CabinetExternal
      summary: Получение списка пользователей кабинета Nocode
      parameters:
        - name: alias
          in: path
          description: Алиас тенанта
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Cabinet.Dto.CabinetUserGetListExternalResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Cabinet.Dto.CabinetUserGetListExternalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Cabinet.Dto.CabinetUserGetListExternalResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/cached-document/not-found:
    get:
      tags:
        - CachedDocumentInternal
      summary: Получение статистики закешированных документов, которых нет в бд
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - CachedDocumentInternal
      summary: Обнуление кеша
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/handbook/region/list:
    get:
      tags:
        - CertificateItmHandbookExternal
      summary: Получение списка регионов
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/profile:
    put:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Заполнить информацию о профиле пользователя
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        description: Данные о профиле
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/identification-point/{identificationPointId}:
    put:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Выбрать идентификационный пункт
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: identificationPointId
          in: path
          description: Ид. идентификационного пункта
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/payment-receiver:
    put:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Подтвердить оплату со стороны получателя
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/info:
    get:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Получение информации о заявке на выпуск сертификата
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/confirm:
    post:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Подтвердить окончание заполнения заявки
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/identification-profile:
    post:
      tags:
        - CertificateMyDssItmCsrExternal
      summary: Завершить верификацию пользователя
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        description: входная модель
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/file/list:
    put:
      tags:
        - CertificateMyDssItmCsrFileExternal
      summary: Прикрепление файлов к заявке
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        description: Список файлов
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/file/{fileId}:
    delete:
      tags:
        - CertificateMyDssItmCsrFileExternal
      summary: Удаление файлов из заявки
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          description: Ид. файла
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/file/comment:
    get:
      tags:
        - CertificateMyDssItmCsrFileExternal
      summary: Получить комментарии к файлам прикрепленных к заявке
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss/{certificateId}/csr/file/oferta-template/download:
    get:
      tags:
        - CertificateMyDssItmCsrFileExternal
      summary: Скачать файл шаблона оферты
      parameters:
        - name: certificateId
          in: path
          description: Ид. сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/itm/my-dss:
    post:
      tags:
        - CertificateMyDssItmExternal
      summary: Создание сертификата
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/pc:
    post:
      tags:
        - CertificatePCExternal
      summary: Создание сертификата
      description: "Концентратор может выпустить серт PC любому пользователю<br />\r\nhttps://confluence.artsofte.ru/pages/viewpage.action?pageId=117543722"
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор пользователя
          schema:
            type: string
        - name: responsiblePartyForAcceptanceAct
          in: query
          description: Где будет принят акт признания ключа, 1 - в мобилке, 2 - на стороне концентратора
          schema:
            $ref: '#/components/schemas/PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct'
        - name: selfReissuable
          in: query
          description: "Настройка – перевыпускаемый сертификат или нет.<br />\r\n            True – перевыпускаемый<br />\r\n            False (по умолчанию) – неперевыпускаемый"
          schema:
            type: boolean
            default: false
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/pay-control/pc:
    post:
      tags:
        - CertificatePCPublic
      summary: Создание сертификата
      description: Оператор может выпустить серт PC любому пользователю
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор пользователя
          schema:
            type: string
        - name: acceptanceType
          in: query
          description: Где будет принят акт признания ключа, пока реализован только в моб. приложении
          schema:
            $ref: '#/components/schemas/PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct'
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/pc-server:
    post:
      tags:
        - CertificatePCServerExternal
      summary: Создание сертификата
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906647
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор фл
          schema:
            type: string
        - name: responsiblePartyForAcceptanceAct
          in: query
          description: Где будет принят акт признания ключа
          schema:
            $ref: '#/components/schemas/PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct'
        - name: clientBuildName
          in: query
          description: Отметка сборки фронтенд-клиента, для которого установлены ключи
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/pc-sms:
    post:
      tags:
        - CertificatePCSmsExternal
      summary: Создание сертификата
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=131499418
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор фл
          schema:
            type: string
        - name: responsiblePartyForAcceptanceAct
          in: query
          description: Где будет принят акт признания ключа
          schema:
            $ref: '#/components/schemas/PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct'
        - name: acceptingAcceptanceActType
          in: query
          description: Тип принятия акта признания
          schema:
            $ref: '#/components/schemas/PayControlLib.KeyAcceptanceAct.Enums.AcceptingAcceptanceActType'
        - name: clientBuildName
          in: query
          description: Отметка сборки фронтенд-клиента, для которого установлены ключи
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/client-api/customer/fl:
    post:
      tags:
        - ClientApiCustomerByFlInternal
      summary: Добавление ФЛ клиентов концентратору
      description: "Получаем пользователей, у которых номер телефона - один из переданных.\r\nПроставляем/обновляем у них партнерскую метку в профиле.\r\nОпределяем компанию по партнерской метке и добавляем этих пользователей в таблицу клиентов для данной компании (если еще не добавлены). \r\nОдин клиент связывается только с одной компанией (старые связи удаляются)"
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                partnerName:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
              partnerName:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApiCustomer.Dto.Response.SetPartnerNameForCustomerFlResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApiCustomer.Dto.Response.SetPartnerNameForCustomerFlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApiCustomer.Dto.Response.SetPartnerNameForCustomerFlResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - ClientApiCustomerByFlInternal
      summary: Удалить клиента ФЛ
      description: Удалится клиент и очистится партнерская метка в профиле пользователя
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/client-api:
    post:
      tags:
        - ClientApiInternal
      summary: Создание концентратора
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/client-api/{clientApiId}:
    get:
      tags:
        - ClientApiInternal
      summary: Получение информации о концентраторе
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.GetClientApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.GetClientApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Response.GetClientApiResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - ClientApiInternal
      summary: Изменение информации концентратора
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.ClientApiUpdatingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.ClientApiUpdatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.ClientApiUpdatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.ClientApi.Dto.Request.ClientApiUpdatingRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/client-api/{clientApiId}/activity:
    patch:
      tags:
        - ClientApiInternal
      summary: Активация/деактивация концентратора
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: isActive
          in: query
          schema:
            type: boolean
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company:
    post:
      tags:
        - CompanyExternal
      summary: Создание компании
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/by-inn:
    get:
      tags:
        - CompanyExternal
      summary: Получение информации о компании по её ИНН
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904821
      parameters:
        - name: inn
          in: query
          schema:
            type: string
            description: ИНН
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/search/list:
    get:
      tags:
        - CompanyExternal
      summary: Получение списка компаний по фильтрам
      parameters:
        - name: Inn
          in: query
          description: ИНН
          schema:
            type: string
        - name: Kpp
          in: query
          description: КПП
          schema:
            type: string
        - name: SearchPart
          in: query
          description: Подстрока для поиска, может включать в себя ИНН, КПП или Краткое название компании
          schema:
            type: string
        - name: Offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company:
    post:
      tags:
        - CompanyOperatorPublic
      summary: Создание верифицированной компании
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/search/list:
    get:
      tags:
        - CompanyOperatorPublic
      summary: Получение списка компаний по фильтрам
      parameters:
        - name: Inn
          in: query
          description: ИНН
          schema:
            type: string
        - name: Kpp
          in: query
          description: КПП
          schema:
            type: string
        - name: SearchPart
          in: query
          description: Подстрока для поиска, может включать в себя ИНН, КПП или Краткое название компании
          schema:
            type: string
        - name: Offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/container/{containerId}/verify:
    post:
      tags:
        - ContainerExternal
      summary: Проверка подписей
      description: https://confluence.artsofte.ru/x/mZBVCg
      parameters:
        - name: containerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/counterparties/fl/list:
    get:
      tags:
        - CounterpartiesExternal
      summary: Получение списка контрагентов с типом ФЛ
      parameters:
        - name: SubstringSearch
          in: query
          description: Строка для поиска
          schema:
            type: string
        - name: UserGuid
          in: query
          description: Ид пользователя
          schema:
            type: string
        - name: Offset
          in: query
          description: Сколько пропустить
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Сколько взять
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByFlResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByFlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByFlResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/counterparties/company/list:
    get:
      tags:
        - CounterpartiesExternal
      summary: Получение списка контрагентов с типом ЮЛ
      parameters:
        - name: SubstringSearch
          in: query
          description: Строка для поиска
          schema:
            type: string
        - name: UserGuid
          in: query
          description: Ид пользователя
          schema:
            type: string
        - name: Offset
          in: query
          description: Сколько пропустить
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Сколько взять
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByCompanyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByCompanyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByCompanyResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/sync-cache:
    get:
      tags:
        - CustomDbSettingsInternalController`
      summary: Синхронизация кеша после изменения базы руками
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/get:
    get:
      tags:
        - CustomDbSettingsInternalController`
      summary: Получение настроек
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema: {}
            application/json:
              schema: {}
            text/json:
              schema: {}
            application/xml:
              schema: {}
            text/xml:
              schema: {}
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/get/by-filter:
    get:
      tags:
        - CustomDbSettingsInternalController`
      summary: Получение настроек по фильтру
      parameters:
        - name: Offset
          in: query
          description: Количество первых элементов, которые надо пропустить.
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Количество возвращаемых элементов.
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/default/get:
    get:
      tags:
        - CustomDbSettingsInternalController`
      summary: Получение дефолтных настроек (из appsettings.DefaultSetting.json)
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
            application/json:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
            text/json:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/description/get:
    get:
      tags:
        - CustomDbSettingsInternalController`
      summary: Получение описания настроек (из appsettings.Description.md)
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
            application/json:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
            text/json:
              schema:
                $ref: '#/components/schemas/System.IO.FileStream'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/custom-setting/set:
    patch:
      tags:
        - CustomDbSettingsInternalController`
      summary: Синхронизация настроек с базой
      parameters:
        - name: updateSettingFile
          in: query
          schema:
            type: boolean
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/callback/document-change-status/send:
    post:
      tags:
        - DebugClientApiCallback
      summary: Отправка колбека на uri концентратора с тестовыми данными
      description: Если концентратора не будет в сервисе, ничего сделано не будет
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: integer
              format: int32
          application/json:
            schema:
              type: integer
              format: int32
          text/json:
            schema:
              type: integer
              format: int32
          application/*+json:
            schema:
              type: integer
              format: int32
          application/xml:
            schema:
              type: integer
              format: int32
          text/xml:
            schema:
              type: integer
              format: int32
          application/*+xml:
            schema:
              type: integer
              format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/company/{companyId}:
    get:
      tags:
        - DebugClientApiCustomerByCompany
      summary: Получение списка клиентов концентратора по его ид.
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/company/list:
    post:
      tags:
        - DebugClientApiCustomerByCompany
      summary: Получение списка клиентов концентратора по его ид.
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          text/xml:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/employee/{companyId}:
    get:
      tags:
        - DebugClientApiCustomerByEmployee
      summary: Получение списка клиентов концентратора по его ид.
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/fl/list:
    get:
      tags:
        - DebugClientApiCustomerByFl
      summary: Получение списка клиентов концентратора по его ид.
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/fl/count:
    get:
      tags:
        - DebugClientApiCustomerByFl
      summary: Получение кол-во зареганных профилей ФЛ по ид. концентратора
      parameters:
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.ClientApiCustomerDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/client-api/{clientApiId}/customer/fl:
    post:
      tags:
        - DebugClientApiCustomerByFl
      summary: Создание связи пользователя
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: clientApiId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/key/role/list:
    get:
      tags:
        - DebugClientApiKey
      summary: Получение списка ролей у ключа по его значению
      parameters:
        - name: key
          in: query
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.RoleDal'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.RoleDal'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.RoleDal'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.RoleDal'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dal.Models.RoleDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/key/info-by-client-api-and-ipaddress:
    get:
      tags:
        - DebugClientApiKey
      summary: Получение информации связанных о ключе
      parameters:
        - name: key
          in: query
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Dal.Models.CompoundModels.KeyInfoByClientApiAndIpAddressDal'
            application/json:
              schema:
                $ref: '#/components/schemas/Dal.Models.CompoundModels.KeyInfoByClientApiAndIpAddressDal'
            text/json:
              schema:
                $ref: '#/components/schemas/Dal.Models.CompoundModels.KeyInfoByClientApiAndIpAddressDal'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/external-api-debug/test-access:
    get:
      tags:
        - DebugExternal
      summary: тестовый рест
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/operator-public/test-access:
    get:
      tags:
        - DebugOperatorPublic
      summary: проверяет авторизацию оператора
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/sign/container/create:
    post:
      tags:
        - DocumentContainerExternal
      summary: Создать контейнер
      description: https://confluence.artsofte.ru/x/_sDCC
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetContainerResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetContainerResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetContainerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetContainerResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetContainerResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/employee/confirm:
    put:
      tags:
        - DocumentEmployeeExternal
      summary: Согласовать документ
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113920340
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/employee/reject:
    put:
      tags:
        - DocumentEmployeeExternal
      summary: Отклонить документ от подписи
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113920336
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/employee/delegate:
    post:
      tags:
        - DocumentEmployeeExternal
      summary: Делегировать документ
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=138638416
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: senderUserGuid
          in: query
          schema:
            type: string
        - name: receiverUserGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document:
    post:
      tags:
        - DocumentExternal
      summary: Создание документа
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904613
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentOldRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentOldRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentOldRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentOldRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
      deprecated: true
  /api/v2/external/document/draft:
    post:
      tags:
        - DocumentExternal
      summary: Создание черновика документа
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=131501952
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/send:
    post:
      tags:
        - DocumentExternal
      summary: Отправка документа по маршруту
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=131501970
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/draft:
    delete:
      tags:
        - DocumentExternal
      summary: Удалить черновик документа
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}:
    get:
      tags:
        - DocumentExternal
      summary: Получение информации о документе
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904730
      parameters:
        - name: documentId
          in: path
          description: Идентификатор документа
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/list/by-filter:
    get:
      tags:
        - DocumentExternal
      summary: Получение информации о входящих и исходящих документах по переданным параметрам
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113912914
      parameters:
        - name: HubEmployeeUserGuid
          in: query
          description: Идентификатор пользователя - сотрудника концентратора
          schema:
            type: string
            deprecated: true
        - name: UserGuid
          in: query
          description: Идентификатор пользователя - сотрудника концентратора
          schema:
            type: string
        - name: Offset
          in: query
          description: Количество первых элементов, которые надо пропустить.
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Количество возвращаемых элементов.
          schema:
            type: integer
            format: int32
        - name: StartDateUtc
          in: query
          description: Минимальная дата создания документа
          schema:
            type: string
            format: date-time
        - name: EndDateUtc
          in: query
          description: Максимальная дата создания документа
          schema:
            type: string
            format: date-time
        - name: SubstringDocumentTitle
          in: query
          description: "Часть заголовка документа\r\nСтрока для поиска заголовка по общему алгоритму"
          schema:
            type: string
        - name: DocumentStatus
          in: query
          description: Системное имя шага документа
          schema:
            $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentStatus'
        - name: DocumentStatusList
          in: query
          description: Список статусов документа
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentStatus'
        - name: ExpectedSignTypeList
          in: query
          description: Тип подписи
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SignType'
        - name: DocumentType
          in: query
          description: Тип документа
          schema:
            $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentType'
        - name: StartChangeDateUtc
          in: query
          description: Левая граница даты последнего изменения
          schema:
            type: string
            format: date-time
        - name: EndChangeDateUtc
          in: query
          description: Правая граница даты последнего изменения
          schema:
            type: string
            format: date-time
        - name: SigningPartyStatus
          in: query
          description: Фильтр по статусу стороны подписи
          schema:
            $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyStatus'
        - name: ExpectedActionTypeList
          in: query
          description: Список ожидаемых активных действий
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyActionType'
        - name: ReceiverCompanyId
          in: query
          description: Ид. компании участника маршрута (помимо самого концентратора)
          schema:
            type: integer
            format: int32
        - name: ReceiverUserGuid
          in: query
          description: Гуид получателя ФЛ, по которому произвести фильтрацию
          schema:
            type: string
        - name: ReceiverType
          in: query
          description: Тип получателя, по которому надо произвести фильтрацию
          schema:
            $ref: '#/components/schemas/NopaperDocumentLib.Recipient.Enum.RecipientType'
        - name: KedoDocumentCodeList
          in: query
          description: Список кедо кодов документов
          schema:
            type: array
            items:
              type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/revoke:
    put:
      tags:
        - DocumentExternal
      summary: Отозвать документ
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904755
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/file-info/list:
    get:
      tags:
        - DocumentExternal
      summary: Получение информации о файлах документа
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904749
      parameters:
        - name: documentId
          in: path
          description: Идентификатор документа
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/remind:
    post:
      tags:
        - DocumentExternal
      summary: Отправление напоминаний о документе
      description: https://confluence.artsofte.ru/x/rlpDC
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/comment/by-system:
    post:
      tags:
        - DocumentExternal
      summary: Добавление системного комментария
      description: Комментарий будет добавлен для всех участников маршрута
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSystemCommentAddRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSystemCommentAddRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSystemCommentAddRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSystemCommentAddRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/comment/list:
    get:
      tags:
        - DocumentExternal
      summary: Получение комментариев к документу
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/file/list:
    post:
      tags:
        - DocumentFileExternal
      summary: Получение списка файлов по идентификаторам
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113913513
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/file/{fileId}/signature/list:
    get:
      tags:
        - DocumentFileExternal
      summary: Получение информации о подписях для файла
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113913515
      parameters:
        - name: fileId
          in: path
          description: идентификатор файла
          required: true
          schema:
            type: string
        - name: documentId
          in: query
          description: Ид. документа
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/file/{fileId}/signature/file/list:
    get:
      tags:
        - DocumentFileExternal
      summary: Получение списка файлов подписи для файла документа
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=133469728
      parameters:
        - name: fileId
          in: path
          description: идентификатор файла
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: Ид. документа
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/file:
    post:
      tags:
        - DocumentFileExternal
      summary: Добавление файла в пакет документов
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=131501959
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/history/list/by-filter:
    get:
      tags:
        - DocumentHistoryExternal
      summary: Получение истории документа по фильтру
      parameters:
        - name: StartDateUtc
          in: query
          description: Начальная дата создания истории
          schema:
            type: string
            format: date-time
        - name: EndDateUtc
          in: query
          description: Конечная дата создания истории
          schema:
            type: string
            format: date-time
        - name: DocumentCode
          in: query
          description: Код документа
          schema:
            type: string
        - name: Offset
          in: query
          description: Количество первых элементов, которые надо пропустить
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Количество возвращаемых элементов
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/link/kep:
    post:
      tags:
        - DocumentLinkExternal
      summary: Создание ссылки документа для подписи КЭП (из анонимной зоны)
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=124658071
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/link/sms:
    post:
      tags:
        - DocumentLinkExternal
      summary: Создание ссылки документа для подписи СМС
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=131500349
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: query
          schema:
            type: string
        - name: certificateId
          in: query
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/document/list/by-filter:
    get:
      tags:
        - DocumentPublic
      summary: Получение информации о входящих и исходящих документах по переданным параметрам
      parameters:
        - name: Offset
          in: query
          description: Количество первых элементов, которые надо пропустить.
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Количество возвращаемых элементов.
          schema:
            type: integer
            format: int32
        - name: SubstringDocumentTitle
          in: query
          description: Часть заголовка документа
          schema:
            type: string
        - name: DocumentStatus
          in: query
          description: Системное имя шага документа
          schema:
            $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentStatus'
        - name: ForWatch
          in: query
          description: Фильтр для плашки "отслеживаю"
          schema:
            type: boolean
        - name: KedoDocumentCodeList
          in: query
          description: Список кедо кодов документов
          schema:
            type: array
            items:
              type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/sign/pc-server/{certificateId}:
    put:
      tags:
        - DocumentSigningExternal
      summary: Подписать документ серверной подписью сотрудника
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113920338
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/sign/pc-sms/{certificateId}:
    post:
      tags:
        - DocumentSigningExternal
      summary: Начать подписание документа pc-sms
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=158776041
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/sign/pc-sms/{certificateId}/confirm:
    post:
      tags:
        - DocumentSigningExternal
      summary: Подверждение подписи контейнера для pc-sms
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=158776043
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSigningPcSmsConfirmRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSigningPcSmsConfirmRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSigningPcSmsConfirmRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.DocumentSigningPcSmsConfirmRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/document/{documentId}/signing-party/root:
    patch:
      tags:
        - DocumentSigningPartyRootExternal
      summary: Изменение разрешения изменения маршрута
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/draft/{documentId}:
    patch:
      tags:
        - DraftExternal
      summary: Редактирование черновика документа
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeDraftRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeDraftRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeDraftRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.ChangeDraftRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/document/draft:
    post:
      tags:
        - DraftPublic
      summary: Создание черновика документа, включая всех сотрудников верифицированной компании
      description: "1. Тип маршрута - параллельный\r\n2. Оператор будет добавлен 1 учатсником маршрута\r\n3. Все подписи будут от лица сотрудников + NEP"
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}/employee/default-profile:
    post:
      tags:
        - EmployeeDefaultProfileExternal
      summary: Установка дефолтного профиля
      description: https://confluence.artsofte.ru/x/QZBVCg
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}/employee:
    post:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Добавление сотрудника в верифицированную компанию
      description: TODO Добавить ссылку на документацию
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Обновление инфы о сотруднике
      description: TODO Добавить ссылку на документацию
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Удаление сотрудника
      description: TODO Добавить ссылку на документацию
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}/employee/{userGuid}:
    get:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Получение информации о сотруднике
      description: TODO Добавить ссылку на документацию
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}/employee/list:
    get:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Получение списка сотрудников
      description: TODO Добавить ссылку на документацию
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: employeeStatus
          in: query
          schema:
            $ref: '#/components/schemas/NopaperProfileUlLib.Employee.Enums.EmployeeStatus'
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}/employee/{userGuid}/head:
    patch:
      tags:
        - EmployeeVerifiedCompanyExternal
      summary: Наделение или отзыв прав руководителя для сотрудника верифицированной компании
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: isHead
          in: query
          schema:
            type: boolean
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/employee:
    post:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Добавление сотрудника в компанию концентратора
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Обновление инфы о сотруднике
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Удаление сотрудника
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/employee/{userGuid}:
    get:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Получение детальной информации о сотруднике
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/employee/list:
    get:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Получение списка сотрудников
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: employeeStatus
          in: query
          schema:
            $ref: '#/components/schemas/NopaperProfileUlLib.Employee.Enums.EmployeeStatus'
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}/employee/{userGuid}/head:
    patch:
      tags:
        - EmployeeVerifiedCompanyOperatorPublic
      summary: Наделение или отзыв прав руководителя
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: isHead
          in: query
          schema:
            type: boolean
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/error/list:
    get:
      tags:
        - Error
      summary: Получение всех существующих кодов ошибок
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Возвращает список ошибок
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/{userGuid}/certificate/list:
    get:
      tags:
        - HubEmployeeCertificate
      summary: Получить список всех сертификатов пользователя
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906662
      parameters:
        - name: userGuid
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/default-profile:
    post:
      tags:
        - HubEmployeeDefaultProfileExternal
      summary: Установка дефолтного профиля
      description: https://confluence.artsofte.ru/x/dI9VCg
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee:
    post:
      tags:
        - HubEmployeeExternal
      summary: Добавление сотрудника в компанию концентратора
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906373
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - HubEmployeeExternal
      summary: Обновление инфы о сотруднике
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113916732
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - HubEmployeeExternal
      summary: Удаление сотрудника из компании концентратора
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113916736
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/list:
    post:
      tags:
        - HubEmployeeExternal
      summary: Получение списка сотрудников концентратора
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906664
      parameters:
        - name: employeeStatus
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/NopaperProfileUlLib.Employee.Enums.EmployeeStatus'
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/list/extended:
    get:
      tags:
        - HubEmployeeExternal
      summary: Получение расширенного списка сотрудников концентратора
      description: https://confluence.artsofte.ru/x/FaTCC
      parameters:
        - name: offset
          in: query
          description: Сколько пропустить
          required: true
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Сколько взять
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeExtendedListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeExtendedListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeExtendedListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/{userGuid}/head:
    patch:
      tags:
        - HubEmployeeExternal
      summary: Наделение или отзыв прав руководителя для сотрудника концентратора
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113922694
      parameters:
        - name: isHead
          in: query
          schema:
            type: boolean
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/procuratory/list:
    get:
      tags:
        - HubEmployeeProcuratory
      summary: Получение списка доверенностей сотрудника
      description: <remarks>https://confluence.artsofte.ru/pages/viewpage.action?pageId=146973717</remarks>
      parameters:
        - name: userGuid
          in: query
          schema:
            type: string
        - name: onlyActive
          in: query
          schema:
            type: boolean
            default: false
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/employee/procuratory/{procuratoryId}/file/{fileId}/download:
    get:
      tags:
        - HubEmployeeProcuratory
      summary: Получение файла доверенности
      description: <remarks>https://confluence.artsofte.ru/pages/viewpage.action?pageId=146973717</remarks>
      parameters:
        - name: procuratoryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/callback-uri:
    patch:
      tags:
        - HubExternal
      summary: Изменение url концентратора
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=117547054
      parameters:
        - name: uri
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub:
    get:
      tags:
        - HubPublic
      summary: Получение информации о концентраторе
      parameters:
        - name: CompanyId
          in: query
          description: Идентификатор компании
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GetHubInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GetHubInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GetHubInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GetHubInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GetHubInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation/employee/available-days/list:
    put:
      tags:
        - HubVacationAvailableDaysExternal
      summary: Импорт остатка дней отпуска
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/vacation/list:
    post:
      tags:
        - HubVacationExternal
      summary: Импорт отпусков
      description: "Все новые строки отпусков добавятся, все имеющиеся - перезапишутся.\r\nОпределение, есть уже отпуск в БД или нет будет происходить по колонкам: VacationScheduleId, EmployeeId, FromDateUtc, UntilDateUtc -\r\nесли в этих колонках значения совпадают с отпуском из запроса, значит существующий отпуск соответствует этому"
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.ImportVacationListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.ImportVacationListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.ImportVacationListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    get:
      tags:
        - HubVacationExternal
      summary: Получить список отпусков сотрудника
      parameters:
        - name: EmployeePhone
          in: query
          description: Телефон сотрудника
          schema:
            type: string
        - name: VacationScheduleId
          in: query
          description: Id графика отпусков (необязательный фильтр)
          schema:
            type: string
            format: uuid
        - name: StartFromDateUtc
          in: query
          description: Начиная с какой даты начинается отпуск (необязательный фильтр)
          schema:
            type: string
            format: date-time
        - name: EndFromDateUtc
          in: query
          description: Заканчивая какой датой начинается отпуск (необязательный фильтр)
          schema:
            type: string
            format: date-time
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/vacation:
    post:
      tags:
        - HubVacationExternal
      summary: Создать отпуск для сотрудника
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/vacation/{vacationId}:
    patch:
      tags:
        - HubVacationExternal
      summary: Редактировать отпуск сотрудника
      parameters:
        - name: vacationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - HubVacationExternal
      summary: Удалить отпуск сотрудника
      parameters:
        - name: vacationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/vacation/check-new-dates:
    post:
      tags:
        - HubVacationExternal
      summary: Проверить новые даты отпуска
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule:
    post:
      tags:
        - HubVacationScheduleExternal
      summary: Создание графика отпусков
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/{vacationScheduleId}:
    put:
      tags:
        - HubVacationScheduleExternal
      summary: Обновление графика отпусков
      parameters:
        - name: vacationScheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - HubVacationScheduleExternal
      summary: Удаление графика отпусков
      parameters:
        - name: vacationScheduleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation-schedule/list:
    get:
      tags:
        - HubVacationScheduleExternal
      summary: Получение списка графика отпусков
      parameters:
        - name: VacationScheduleId
          in: query
          description: Id графика отпусков (фильтр)
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/vacation/settings:
    patch:
      tags:
        - HubVacationSettingsExternal
      summary: Обновление настроек отпуска компании
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    get:
      tags:
        - HubVacationSettingsExternal
      summary: Получение настроек отпуска компании
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/key:
    post:
      tags:
        - KeyInternal
      summary: Создание ключа существующему концентратору
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/key/{key}:
    get:
      tags:
        - KeyInternal
      summary: Получение информации о ключе концентратора
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/key/{key}/role:
    patch:
      tags:
        - KeyInternal
      summary: Изменение ролей для ключа
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
          application/xml:
            schema:
              type: array
              items:
                type: string
          text/xml:
            schema:
              type: array
              items:
                type: string
          application/*+xml:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/key/{key}/ip-address:
    patch:
      tags:
        - KeyInternal
      summary: Изменение разрешенных ip адресов для ключа
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
          application/xml:
            schema:
              type: array
              items:
                type: string
          text/xml:
            schema:
              type: array
              items:
                type: string
          application/*+xml:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/internal/operator:
    post:
      tags:
        - OperatorInternal
      summary: Создание оператора
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - OperatorInternal
      summary: Удаление оператора
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/operator:
    get:
      tags:
        - OperatorPublic
      summary: Получение информации о операторе
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl:
    post:
      tags:
        - ProfileFlExternal
      summary: Создание профиля ФЛ
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113907222
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - ProfileFlExternal
      summary: Изменение информации о пользователе
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906628
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/user-guid/by-phone:
    get:
      tags:
        - ProfileFlExternal
      summary: Получить идентификатор пользователя по номеру телефона
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904812
      parameters:
        - name: userPhone
          in: query
          schema:
            type: string
            description: Сущность номера телефона
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/{userGuid}/phone:
    get:
      tags:
        - ProfileFlExternal
      summary: Получить номер телефона пользователя по ид.
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=133477320
      parameters:
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserPhoneByUserGuidResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserPhoneByUserGuidResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetUserPhoneByUserGuidResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/company/list:
    get:
      tags:
        - ProfileFlExternal
      summary: Получение списка компаний, где пользователь является сотрудником
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113904825
      parameters:
        - name: UserPhone
          in: query
          description: Номер телефона
          schema:
            type: string
        - name: Email
          in: query
          description: Почта пользователя
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetEmployeeCompanyListByFlInfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetEmployeeCompanyListByFlInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.GetEmployeeCompanyListByFlInfoResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/one-time-password:
    post:
      tags:
        - ProfileFlExternal
      summary: Создание и отправка одноразового смс для авторизации пользователя
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113921834
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/{userGuid}/secret-code:
    post:
      tags:
        - ProfileFlExternal
      summary: Создание одноразового секретного кода для авторизации пользователя
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=133473509
      parameters:
        - name: userGuid
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/profile-fl/with-any-phone:
    post:
      tags:
        - ProfileFlExternal
      summary: Создание профиля ФЛ с номером любой страны
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=133476582
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlWithAnyPhoneNumberCreatingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlWithAnyPhoneNumberCreatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlWithAnyPhoneNumberCreatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlWithAnyPhoneNumberCreatingRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/profile-fl:
    post:
      tags:
        - ProfileFlPublic
      summary: Создание пользователя
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    get:
      tags:
        - ProfileFlPublic
      summary: Получение информации о пользователе
      parameters:
        - name: userId
          in: query
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    patch:
      tags:
        - ProfileFlPublic
      summary: Изменение информации о пользователе
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/profile-fl/count:
    get:
      tags:
        - ProfileFlPublic
      summary: Получение кол-во зарегистрированных пользователей
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/profile-fl/list:
    post:
      tags:
        - ProfileFlPublic
      summary: Получение списка пользователей
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/profile-fl/suggest/list:
    post:
      tags:
        - ProfileFlPublic
      summary: Получение списка пользователей
      parameters:
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/profile-fl/{userGuid}/company/list:
    get:
      tags:
        - ProfileFlPublic
      summary: Получение списка верифицированных компаний, где пользователь является активным сотрудником
      parameters:
        - name: userGuid
          in: path
          description: Ид. пользователя, у которого запрашиваем список компаний
          required: true
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingVerifiedCompanyInfoListForProfileResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingVerifiedCompanyInfoListForProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingVerifiedCompanyInfoListForProfileResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/debug/role/roleId/list:
    get:
      tags:
        - RoleDebug
      summary: Получение идентификаторов ролей по их названию
      parameters:
        - name: roleNameList
          in: query
          schema:
            type: array
            items:
              type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            text/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            application/xml:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            text/xml:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/list:
    get:
      tags:
        - SigningExternal
      summary: Получить список сертификатов пользователя
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=113906662
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор пользователя
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/{certificateId}/activate:
    patch:
      tags:
        - SigningPCExternal
      summary: Активировать сертификат крпитопровайдера PayControl
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=124665414
      parameters:
        - name: certificateId
          in: path
          description: ID сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: clientBuildName
          in: query
          description: Отметка сборки фронтенд-клиента, для которого установлены ключи
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/{certificateId}/ready-for-accept:
    get:
      tags:
        - SigningPCExternal
      summary: Проверить, можно ли активировать сертификат
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/{certificateId}/revoke:
    patch:
      tags:
        - SigningPCExternal
      summary: Отозвать сертификат крпитопровайдера PayControl
      description: https://confluence.artsofte.ru/pages/viewpage.action?pageId=124665422
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: reason
          in: query
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/{certificateId}/blocking-control:
    patch:
      tags:
        - SigningPCExternal
      summary: Изменить статус сертификата
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: isBlock
          in: query
          schema:
            type: boolean
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/certificate/pay-control/{certificateId}/act-acceptance-key:
    get:
      tags:
        - SigningPCExternal
      summary: Получить акт признания ключа для сертификата
      parameters:
        - name: certificateId
          in: path
          description: Идентификатор сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/pay-control/{certificateId}/activate:
    patch:
      tags:
        - SigningPCPublic
      summary: Активировать сертификат крпитопровайдера PayControl
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/pay-control/{certificateId}/revoke:
    patch:
      tags:
        - SigningPCPublic
      summary: Отозвать сертификат крпитопровайдера PayControl
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: reason
          in: query
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/{certificateId}/act-acceptance-key:
    get:
      tags:
        - SigningPublic
      summary: Получить акт признания ключа для сертификата
      parameters:
        - name: certificateId
          in: path
          description: Идентификатор сертификата
          required: true
          schema:
            type: string
            format: uuid
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/list:
    get:
      tags:
        - SigningPublic
      summary: Получить список сертификатов пользователя
      parameters:
        - name: userGuid
          in: query
          description: Идентификатор пользователя
          schema:
            type: string
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/certificate/{certificateId}/blocking:
    patch:
      tags:
        - SigningPublic
      summary: Изменить статус сертификата - блокировка или разблокировка
      parameters:
        - name: certificateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: isBlock
          in: query
          schema:
            type: boolean
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/unit:
    post:
      tags:
        - UnitHubKedoExternal
      summary: Добавить отдел
      parameters:
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/unit/list:
    get:
      tags:
        - UnitHubKedoExternal
      summary: Получить список отделов
      parameters:
        - name: userGuid
          in: query
          description: ID пользователя-сотрудника. Если передано - будут возвращены те отдела, к которым сотрудник имеет отношение
          schema:
            type: string
        - name: employeePhone
          in: query
          description: Номер телефона сотрудника. Если передано - будут возвращены те отделы, в которых есть сотрудник с данным номером телефона
          schema:
            type: string
            description: Сущность номера телефона
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/unit/{unitId}:
    patch:
      tags:
        - UnitHubKedoExternal
      summary: Изменить информацию об отделе
      parameters:
        - name: unitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    get:
      tags:
        - UnitHubKedoExternal
      summary: Получить информацию об отделе
      parameters:
        - name: unitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitWithEmployeeExtendedResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitWithEmployeeExtendedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitWithEmployeeExtendedResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
    delete:
      tags:
        - UnitHubKedoExternal
      summary: Удалить отдел
      parameters:
        - name: unitId
          in: path
          description: ID подразделения
          required: true
          schema:
            type: string
            format: uuid
        - name: withEmployees
          in: query
          description: true - отдел будет удалён вместе с сотрудниками. false - если в отделе есть сотрудники - рест выдаст ошибку.
          schema:
            type: boolean
            default: false
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/unit/{unitId}/employee/by-phone/{employeePhone}:
    put:
      tags:
        - UnitHubKedoExternal
      summary: Добавить сотрудника в отдел
      parameters:
        - name: unitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: employeePhone
          in: path
          required: true
          schema:
            type: string
            description: Сущность номера телефона
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/hub/kedo/unit/{unitId}/employee/{employeePhone}:
    delete:
      tags:
        - UnitHubKedoExternal
      summary: Удалить сотрудника из отдела
      parameters:
        - name: unitId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: employeePhone
          in: path
          required: true
          schema:
            type: string
            description: Сущность номера телефона
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/{companyId}:
    patch:
      tags:
        - VerifiedCompanyExternal
      summary: Изменение компании
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/verified/list:
    get:
      tags:
        - VerifiedCompanyExternal
      summary: Получение списка компаний
      parameters:
        - name: count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/external/company/verified/search/list:
    get:
      tags:
        - VerifiedCompanyExternal
      summary: Получение списка верифицированных компаний по фильтрам
      parameters:
        - name: Inn
          in: query
          description: ИНН
          schema:
            type: string
        - name: Kpp
          in: query
          description: КПП
          schema:
            type: string
        - name: SearchPart
          in: query
          description: Подстрока для поиска, может включать в себя ИНН, КПП или Краткое название компании
          schema:
            type: string
        - name: Offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/{companyId}:
    patch:
      tags:
        - VerifiedCompanyOperatorPublic
      summary: Изменение компании
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
          application/*+xml:
            schema:
              $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/verified/list:
    get:
      tags:
        - VerifiedCompanyOperatorPublic
      summary: Получение верифицированных списка компаний
      parameters:
        - name: count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /api/v2/public/hub/{hubCompanyId}/company/verified/search/list:
    get:
      tags:
        - VerifiedCompanyOperatorPublic
      summary: Получение списка верифицированных компаний по фильтрам
      parameters:
        - name: Inn
          in: query
          description: ИНН
          schema:
            type: string
        - name: Kpp
          in: query
          description: КПП
          schema:
            type: string
        - name: SearchPart
          in: query
          description: Подстрока для поиска, может включать в себя ИНН, КПП или Краткое название компании
          schema:
            type: string
        - name: Offset
          in: query
          description: Отступ
          schema:
            type: integer
            format: int32
        - name: Count
          in: query
          description: Кол-во
          schema:
            type: integer
            format: int32
        - name: hubCompanyId
          in: path
          required: true
          schema:
            type: string
        - name: TraceId
          in: header
          description: Идентификатор выполнения процесса
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse'
  /internal/health:
    get:
      tags:
        - ApiHealth
      summary: Базовый запрос для проверки работоспособности частей сервиса
      responses: {}
components:
  schemas:
    Api.Controllers.External.AmoCrm.Dto.Response.AmoCrmGetAccessTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: Акцес токен
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.AmoCrm.AmoCrmExternalController.GetAccessTokenAsync(System.String)" />
    Api.Controllers.External.Cabinet.Dto.CabinetEmployeeExternalResponse:
      type: object
      properties:
        nppCompanyId:
          type: integer
          description: ID компании
          format: int32
        shortCompanyName:
          type: string
          description: Название компании
          nullable: true
        companyInn:
          type: string
          description: ИНН
          nullable: true
        companyKpp:
          type: string
          description: КПП компании
          nullable: true
        position:
          type: string
          description: Должность. Задаётся, если пользователь привязан к кабинету как сотрудник компании.
          nullable: true
      additionalProperties: false
      description: Информация о пользователе кабинета Nocode, как сотрудника организации
    Api.Controllers.External.Cabinet.Dto.CabinetUserExternalResponse:
      type: object
      properties:
        nppUserGuid:
          type: string
          description: ID пользователя в Nopaper
          nullable: true
        sadoUserGuid:
          type: string
          description: ID пользователя в САДО
          nullable: true
        sadoUserLogin:
          type: string
          description: Логин пользователя в САДО
          nullable: true
        sadoProfileId:
          type: string
          description: ID профиля пользователя кабинета в SADO
          format: uuid
        surname:
          type: string
          description: Фамилия
          nullable: true
        name:
          type: string
          description: Имя
          nullable: true
        patronymic:
          type: string
          description: Отчество
          nullable: true
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        cabinetName:
          type: string
          description: Имя кабинета
          nullable: true
        apiKey:
          type: string
          description: API ключ для запросов в external-api САДО
          nullable: true
        employee:
          $ref: '#/components/schemas/Api.Controllers.External.Cabinet.Dto.CabinetEmployeeExternalResponse'
      additionalProperties: false
      description: Информация о пользователе кабинета Nocode
    Api.Controllers.External.Cabinet.Dto.CabinetUserGetListExternalResponse:
      type: object
      properties:
        userList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Cabinet.Dto.CabinetUserExternalResponse'
          description: Список пользователей кабинета
          nullable: true
      additionalProperties: false
      description: Информация о пользователях кабинета Nocode
    Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest:
      type: object
      properties:
        inn:
          type: string
          description: ИНН
          nullable: true
        kpp:
          type: string
          description: КПП
          nullable: true
        fullName:
          type: string
          description: Полное наименование с ОПФ
          nullable: true
        shortName:
          type: string
          description: Краткое наименование с ОПФ
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.UseCaseManagers.Company.Interfaces.IVerifiedCompanyUseCaseManager.CreateAsync(Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest,System.Int32)
    Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest:
      type: object
      properties:
        shortName:
          type: string
          description: Краткое наименование с ОПФ
          nullable: true
        fullName:
          type: string
          description: Полное наименование с ОПФ
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.UseCaseManagers.Company.Interfaces.IVerifiedCompanyUseCaseManager.EditAsync(Api.Controllers.External.Company.Dto.Request.EditVerifiedCompanyRequest,System.Int32,System.Int32,System.Int32)" />
    Api.Controllers.External.Company.Dto.Response.CreateVerifiedCompanyResponse:
      type: object
      properties:
        companyId:
          type: integer
          description: Идентификатор компании
          format: int32
      additionalProperties: false
      description: Выходная модель для M:Api.UseCaseManagers.Company.Interfaces.IVerifiedCompanyUseCaseManager.CreateAsync(Api.Controllers.External.Company.Dto.Request.CreateVerifiedCompanyRequest,System.Int32)
    Api.Controllers.External.Company.Dto.Response.Dto.GetCompanyInfoByInnResponseDto:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор компании
          format: int32
        shortName:
          type: string
          description: Краткое наименование компании с ОПФ
          nullable: true
        kpp:
          type: string
          description: КПП компании
          nullable: true
      additionalProperties: false
      description: Модель для выходной модели M:Api.UseCaseManagers.Company.Interfaces.ICompanyUseCaseManager.GetCompanyListByFilterAsync(NopaperProfileUlLib.Company.Models.Request.GetCompanyListBrokerRequest)
    Api.Controllers.External.Company.Dto.Response.Dto.GetCompanyInfoResponseDto:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор компании
          format: int32
        shortName:
          type: string
          description: Краткое наименование компании с ОПФ
          nullable: true
        inn:
          type: string
          description: ИНН
          nullable: true
        kpp:
          type: string
          description: КПП компании
          nullable: true
      additionalProperties: false
      description: Информация о компании
    Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListByInnResponse:
      type: object
      properties:
        companyInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.Dto.GetCompanyInfoByInnResponseDto'
          description: Список компаний
          nullable: true
      additionalProperties: false
      description: Выходная модель для Получения списк компаний
    Api.Controllers.External.Company.Dto.Response.GetCompanyInfoListResponse:
      type: object
      properties:
        companyInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.Dto.GetCompanyInfoResponseDto'
          description: Список компаний
          nullable: true
      additionalProperties: false
      description: Выходная модель <inheritdoc cref="M:Api.UseCaseManagers.Company.Interfaces.IVerifiedCompanyUseCaseManager.GetListAsync(System.Int32,CoreLib.Dal.Base.Repositories.Models.CountFilter)" />
    Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionDtoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.Dto.PrivilegedPermissionRequestDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.UseCaseManagers.Employee.Interfaces.IEmployeeUpdateUseCaseManager.UpdateForVerifiedCompanyAsync(Api.Controllers.External.Company.Employee.Dto.Request.ChangeRightsVerifiedEmployeeRequest,System.Int32,System.Int32)
    Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionDtoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.Dto.PrivilegedPermissionRequestDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
      additionalProperties: false
      description: Входная модель для M:Api.UseCaseManagers.Employee.Interfaces.ICreateEmployeeUseCaseManager.CreateForVerifiedCompanyAsync(Api.Controllers.External.Company.Employee.Dto.Request.CreateVerifiedEmployeeRequest,System.Int32,System.Int32)
    Api.Controllers.External.Company.Employee.Dto.Request.Dto.PrivilegedPermissionRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Название привилегированного права
          nullable: true
        startDateUtc:
          type: string
          description: Начала действия
          format: date-time
        endDateUtc:
          type: string
          description: Ококнчание действия
          format: date-time
        procuratoryFile:
          $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.Dto.ProcuratoryFileInfoDto'
      additionalProperties: false
      description: Модель для привилегированных прав сотрудника
    Api.Controllers.External.Company.Employee.Dto.Request.Dto.ProcuratoryFileInfoDto:
      type: object
      properties:
        fileNameWithExtension:
          type: string
          description: Название файла доверенности с расширением
          nullable: true
        fileBase64:
          type: string
          description: файл доверенности в формате base64
          nullable: true
        numberProcuratory:
          type: string
          description: Номер доверенности
          nullable: true
      additionalProperties: false
      description: Информация о файле доверенности
    Api.Controllers.External.Company.Employee.Dto.Response.CreateEmployeeResponse:
      type: object
      properties:
        procuratoryList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.CreateProcuratoryResponseDto'
          description: Список созданных доверенностей
          nullable: true
      additionalProperties: false
      description: Ответ на запрос создания сотрудника
    Api.Controllers.External.Company.Employee.Dto.Response.Dto.CreateProcuratoryResponseDto:
      type: object
      properties:
        permissionAlias:
          type: string
          description: Алиас права
          nullable: true
        procuratoryFileId:
          type: string
          description: Id файла доверенности
          nullable: true
      additionalProperties: false
      description: Ответ на действие добавление доверенности
    Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeInfoResponseDto:
      type: object
      properties:
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        fullName:
          type: string
          description: ФИО пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionDtoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.PrivilegedPermissionResponseDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isHead:
          type: boolean
          description: Является ли пользователь руководителем
      additionalProperties: false
      description: Информация о сотруднике
    Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeShortInfo:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        fullName:
          type: string
          description: ФИО пользователя
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isHead:
          type: boolean
          description: Пользователь - руководитель?
        isCompanyDocumentsRecipient:
          type: boolean
          description: Получатель документов компании (контактное лицо)?
      additionalProperties: false
      description: Краткая информация о сотруднике
    Api.Controllers.External.Company.Employee.Dto.Response.Dto.PrivilegedPermissionResponseDto:
      type: object
      properties:
        name:
          type: string
          description: Название привилегированного права
          nullable: true
        startDateUtc:
          type: string
          description: Начала действия
          format: date-time
        endDateUtc:
          type: string
          description: Ококнчание действия
          format: date-time
      additionalProperties: false
      description: Информация о привилигированных правах сотрудника
    Api.Controllers.External.Company.Employee.Dto.Response.EmployeeFullInfoResponseDto:
      type: object
      properties:
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        fullName:
          type: string
          description: ФИО пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionDtoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.PrivilegedPermissionResponseDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isHead:
          type: boolean
          description: Является ли пользователь руководителем
      additionalProperties: false
      description: Полная информация о сотруднике
    Api.Controllers.External.Company.Employee.Dto.Response.GetVerifiedEmployeeListResponse:
      type: object
      properties:
        employeeInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeShortInfo'
          description: Список Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeShortInfo
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.Company.Employee.EmployeeVerifiedCompanyExternalController.GetListAsync(System.Int32,NopaperProfileUlLib.Employee.Enums.EmployeeStatus,Api.UseCaseManagers.Employee.Interfaces.IEmployeeGetListUseCaseManager)
    Api.Controllers.External.Company.Employee.Dto.Response.UpdateEmployeeResponse:
      type: object
      properties:
        procuratoryList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.CreateProcuratoryResponseDto'
          description: Список созданных доверенностей
          nullable: true
      additionalProperties: false
      description: Ответ на запрос обновления сотрудника
    Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        isFl:
          type: boolean
          description: Установить ФЛ
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Company.EmployeeDefaultProfile.EmployeeDefaultProfileExternalController.SetDefaultProfileAsync(Api.Controllers.External.Company.EmployeeDefaultProfile.Dto.Request.SetEmployeeDefaultprofileRequest,System.Int32,Api.UseCaseManagers.EmployeeDefaultProfile.Interfaces.IEmployeeDefaultProfileUseCaseManager)" />
    Api.Controllers.External.Container.Dto.Request.Dto.SignedTransactionInfoDto:
      type: object
      properties:
        fileId:
          type: string
          description: ID подписанного файла
          nullable: true
        signatureBase64:
          type: string
          description: Подпись в формате base64
          nullable: true
      additionalProperties: false
      description: Информация о подписи
    Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest:
      type: object
      properties:
        transactionList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Container.Dto.Request.Dto.SignedTransactionInfoDto'
          description: Список подписанных транзакций
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Container.ContainerExternalController.SignedTransactionVerifyAsync(System.Guid,Api.Controllers.External.Container.Dto.Request.SignedTransactionVerifyRequest)" />
    Api.Controllers.External.Counterparties.Dto.Response.Dto.CounterpartiesCompanyInfoResponse:
      type: object
      properties:
        companyId:
          type: integer
          description: Идентификатор компании
          format: int32
        inn:
          type: string
          description: ИНН
          nullable: true
        kpp:
          type: string
          description: КПП
          nullable: true
        shortCompanyName:
          type: string
          description: Сокращенное название компании
          nullable: true
        id:
          type: integer
          description: Идентификатор записи
          format: int32
      additionalProperties: false
      description: Информация о контрагенте ЮЛ
    Api.Controllers.External.Counterparties.Dto.Response.Dto.CounterpartiesFlInfoResponse:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        fullName:
          type: string
          description: ФИО
          nullable: true
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        id:
          type: integer
          description: Идентификатор записи
          format: int32
      additionalProperties: false
      description: Информация о контрагенте ФЛ
    Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByCompanyResponse:
      type: object
      properties:
        counterpartiesCompanyInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.Dto.CounterpartiesCompanyInfoResponse'
          description: Список контрагентов с типом ЮЛ
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Counterparties.CounterpartiesExternalController.GetCounterpartiesByCompanyAsync(Api.Controllers.External.Counterparties.Dto.Request.GetCounterpartiesListRequest,CoreLib.Dal.Base.Repositories.Models.CountFilter)" />
    Api.Controllers.External.Counterparties.Dto.Response.GetCounterpartiesByFlResponse:
      type: object
      properties:
        counterpartiesFlInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Counterparties.Dto.Response.Dto.CounterpartiesFlInfoResponse'
          description: Список контрагентов с типом ФЛ
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Counterparties.CounterpartiesExternalController.GetCounterpartiesByFlAsync(Api.Controllers.External.Counterparties.Dto.Request.GetCounterpartiesListRequest,CoreLib.Dal.Base.Repositories.Models.CountFilter)" />
    Api.Controllers.External.Document.Dto.Request.ChangeDraftRequest:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/Core.Entities.NullWriter.NullWriterClass`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'
        additionalInfo:
          $ref: '#/components/schemas/Core.Entities.NullWriter.NullWriterClass`1[[Api.Controllers.External.Document.Dto.Request.Dto.AdditionalInfoDto, Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
      additionalProperties: false
      description: Модель для редактирования черновика
    Api.Controllers.External.Document.Dto.Request.ChangeRouteChanginPermissionRequest:
      type: object
      properties:
        isDisableChange:
          type: boolean
          description: Запрещено ли изменение маршрута
      additionalProperties: false
    Api.Controllers.External.Document.Dto.Request.CommentActionRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NopaperDocumentLib.DocumentComment.Enum.DocumentCommentActionType'
        data:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: Данные для действия
          nullable: true
      additionalProperties: false
      description: Действие для комментария
    Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest:
      type: object
      properties:
        fileInfo:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.FileInfoRequestDto'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentFileExternalController.CreateDocumentFileAsync(System.Int32,Api.Controllers.External.Document.Dto.Request.CreateDocumentFileRequest,AutoMapper.IMapper,NopaperDocumentLib.DocumentFile.Services.Interfaces.IDocumentFileConnectionService)" />
    Api.Controllers.External.Document.Dto.Request.CreateDocumentOldRequest:
      type: object
      properties:
        title:
          type: string
          description: Заголовок документа
          nullable: true
        userGuid:
          type: string
          description: Идентификатор сотрудника создателя
          nullable: true
        fileInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.FileInfoRequestDto'
          description: Список файлов
          nullable: true
        recipientInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.RecipientInfoDto'
          description: Список получателей документа
          nullable: true
        documentRouteType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyQueueType'
        documentCode:
          type: string
          description: Код документа
          nullable: true
        documentType:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentType'
      additionalProperties: false
      description: Создание документа
    Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest:
      type: object
      properties:
        title:
          type: string
          description: Заголовок документа
          nullable: true
        userGuid:
          type: string
          description: Идентификатор сотрудника создателя
          nullable: true
        recipientInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.RecipientInfoDto'
          description: Список получателей документа
          nullable: true
        documentRouteType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyQueueType'
        documentCode:
          type: string
          description: Код документа
          nullable: true
        documentType:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentType'
        isDisableChange:
          type: boolean
          description: Запрещено ли редактирование маршрута
        additionalInfo:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.AdditionalInfoDto'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentExternalController.CreateDocumentAsync(Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest)" />
    Api.Controllers.External.Document.Dto.Request.DocumentRemindingRequest:
      type: object
      properties:
        remindType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyRemindType'
        receiverUserGuidList:
          type: array
          items:
            type: string
          description: Идентификаторы получателей уведомления.
          nullable: true
      additionalProperties: false
    Api.Controllers.External.Document.Dto.Request.DocumentSigningPcSmsConfirmRequest:
      type: object
      properties:
        code:
          type: string
          description: Модель под пароль
          nullable: true
      additionalProperties: false
    Api.Controllers.External.Document.Dto.Request.DocumentSystemCommentAddRequest:
      type: object
      properties:
        message:
          type: string
          description: Текст комментария
          nullable: true
        actionList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.CommentActionRequest'
          description: Список действий для комментария
          nullable: true
      additionalProperties: false
      description: Запрос на добавление системного комментария
    Api.Controllers.External.Document.Dto.Request.Dto.AdditionalInfoDto:
      type: object
      properties:
        scheme:
          type: string
          description: Название схемы данных
          nullable: true
        dataDict:
          type: object
          additionalProperties:
            type: string
            nullable: true
          description: Дополнительные данные
          nullable: true
      additionalProperties: false
      description: Дополнительная информация о документе
    Api.Controllers.External.Document.Dto.Request.Dto.DocumentFileInfoParamDto:
      type: object
      properties:
        fileId:
          type: string
          description: Идентификатор файла
          nullable: true
        documentId:
          type: integer
          description: Идентификатор документа
          format: int32
      additionalProperties: false
      description: Информация о привязке файла к документу
    Api.Controllers.External.Document.Dto.Request.Dto.FileInfoRequestDto:
      type: object
      properties:
        fileNameWithExtension:
          type: string
          description: Название файла с расширением
          nullable: true
        fileBase64:
          type: string
          description: Файл в формате base64
          nullable: true
      additionalProperties: false
      description: Информация о файле для добавления в документ
    Api.Controllers.External.Document.Dto.Request.Dto.RecipientInfoDto:
      type: object
      properties:
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        companyInn:
          type: string
          description: ИНН
          nullable: true
        companyKpp:
          type: string
          description: КПП компании, указывается, если компания не является ИП
          nullable: true
        actionType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyActionType'
        signType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SignType'
        expectedActionOnly:
          type: boolean
          description: Допускается только ожидаемое действие
      additionalProperties: false
      description: Информация о получателе документа
    Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest:
      type: object
      properties:
        documentFileInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.DocumentFileInfoParamDto'
          description: Список с информацией о файлах, которые необходимо получить
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentFileExternalController.GetDocumentFileListAsync(Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest)" />
    Api.Controllers.External.Document.Dto.Response.CreateDocumentDraftResponse:
      type: object
      properties:
        documentId:
          type: integer
          description: Ид. документа
          format: int32
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentExternalController.CreateDocumentAsync(Api.Controllers.External.Document.Dto.Request.CreateDocumentRequest)" />
    Api.Controllers.External.Document.Dto.Response.DocumentFileGettingResponse:
      type: object
      properties:
        fileInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.FileInfoResultDto'
          description: Список файлов
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentFileExternalController.GetDocumentFileListAsync(Api.Controllers.External.Document.Dto.Request.GettingDocumentFileListRequest)" />
    Api.Controllers.External.Document.Dto.Response.DocumentFileListGettingResponse:
      type: object
      properties:
        originFileList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Оригинальные файлы
          nullable: true
        originFileWithStampList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Файлы со штампами
          nullable: true
        ofertaList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Оригинальные оферты
          nullable: true
        ofertaWithStampList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Оферты со штампами
          nullable: true
        procuratoryList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Оригинальные доверенности
          nullable: true
        procuratoryWithStampList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Доверенности со штампами
          nullable: true
        kedoXmlList:
          type: array
          items:
            $ref: '#/components/schemas/Logic.DocumentFile.Model.FileInfoOutput'
          description: Кедо хмл опись
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentExternalController.GetFileInfoListAsync(System.Int32,Api.UseCaseManagers.Document.Interfaces.IDocumentFileUseCaseManager)" />
    Api.Controllers.External.Document.Dto.Response.DocumentHistoryDto:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор истории документа
          format: int32
        documentId:
          type: integer
          description: Идентификатор документа
          format: int32
        documentTitle:
          type: string
          description: Название документа
          nullable: true
        documentCode:
          type: string
          description: Код документа
          nullable: true
        userGuid:
          type: string
          description: Идентификатор пользователя, по которому создана история документа
          nullable: true
        userName:
          type: string
          description: ФИО пользователя, по которому создана история документа
          nullable: true
        eventName:
          type: string
          description: Системное название истории документа
          nullable: true
        createDateUtc:
          type: string
          description: Дата создания истории документа
          format: date-time
      additionalProperties: false
      description: Модель истории документа
    Api.Controllers.External.Document.Dto.Response.Dto.DocumentCommentResponse:
      type: object
      properties:
        commentId:
          type: integer
          description: Идентификатор комментария
          format: int32
        message:
          type: string
          description: Текст комментария
          nullable: true
        recipientUserGuid:
          type: string
          description: ID получателя комментария (если задано)
          nullable: true
        createTimeUtc:
          type: string
          description: Дата создания комменария
          format: date-time
        creatorFullName:
          type: string
          description: Имя создателя комментария
          nullable: true
        creatorShortCompanyName:
          type: string
          description: Краткое название компании с ОФП создателя комментария
          nullable: true
        priorityType:
          $ref: '#/components/schemas/NopaperDocumentLib.DocumentComment.Enum.PriorityType'
      additionalProperties: false
      description: Информация о комментарии к документу
    Api.Controllers.External.Document.Dto.Response.Dto.DocumentGettingByFilterRecipientResultDto:
      type: object
      properties:
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        companyInn:
          type: string
          description: ИНН
          nullable: true
        companyKpp:
          type: string
          description: Кпп компании
          nullable: true
      additionalProperties: false
      description: Информация о получателе для модели '<inheritdoc cref="T:Api.Controllers.External.Document.Dto.Response.Dto.GetDocumentHubByFiltersResultDto" />'>
    Api.Controllers.External.Document.Dto.Response.Dto.DocumentRecipientInfoDto:
      type: object
      properties:
        id:
          type: integer
          description: Ид. участника
          format: int32
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        companyInn:
          type: string
          description: ИНН
          nullable: true
        companyKpp:
          type: string
          description: КПП компании
          nullable: true
        actionType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyActionType'
        signingPartyStatus:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyStatus'
        isViewed:
          type: boolean
          description: Посмотрен ли документ участником
        order:
          type: integer
          description: Порядок получателя
          format: int32
        signType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SignType'
      additionalProperties: false
      description: Информация об участнике маршрута
    Api.Controllers.External.Document.Dto.Response.Dto.FileInfoResultDto:
      type: object
      properties:
        fileId:
          type: string
          description: Идентификатор
          nullable: true
        fileBase64:
          type: string
          description: Содержимое в формате Base64
          nullable: true
        fileNameWithExtension:
          type: string
          description: Название с расширением
          nullable: true
      additionalProperties: false
      description: Информация о файле
    Api.Controllers.External.Document.Dto.Response.Dto.FileResultDto:
      type: object
      properties:
        id:
          type: string
          description: Идентификатор
          nullable: true
        base64:
          type: string
          description: Содержимое в формате Base64
          nullable: true
        nameWithExtension:
          type: string
          description: Название с расширением
          nullable: true
      additionalProperties: false
      description: Информация о файле
    Api.Controllers.External.Document.Dto.Response.Dto.GetDocumentHubByFiltersResultDto:
      type: object
      properties:
        documentId:
          type: integer
          description: Идентификатор документа
          format: int32
        documentCode:
          type: string
          description: Код документа
          nullable: true
        documentTitle:
          type: string
          description: Заголовок документа
          nullable: true
        createDateUtc:
          type: string
          description: Датат созадния документа
          format: date-time
        documentStatus:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentStatus'
        senderInfo:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.DocumentGettingByFilterRecipientResultDto'
        activeRecipientInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.DocumentGettingByFilterRecipientResultDto'
          description: Список участников маршута, от которых ожидается активное действие
          nullable: true
        viewedRecipientInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.DocumentGettingByFilterRecipientResultDto'
          description: Список участников маршрута, которые посмотрели документ
          nullable: true
      additionalProperties: false
      description: Информация о документу
    Api.Controllers.External.Document.Dto.Response.Dto.SignatureFileResponseDto:
      type: object
      properties:
        certificateId:
          type: string
          description: Идентификатор сертификата
          format: uuid
        certificateOwnerName:
          type: string
          description: ФИО владельца сертификата
          nullable: true
        confirmCode:
          type: string
          description: Код подтверждения
          nullable: true
        confirmCodeSms:
          type: string
          description: Код подтверждения СМС
          nullable: true
        certificateProviderType:
          $ref: '#/components/schemas/SigningLib.Providers.Enums.SigningProviderType'
        signatureValue:
          type: string
          description: Значение попдписи
          nullable: true
        signingDateTimeUtc:
          type: string
          description: Время подписи
          format: date-time
        certificateOwnerUserGuid:
          type: string
          description: Идентификатор пользователя идентити
          nullable: true
        signingEmployeeInfo:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.SigningEmployeeInfoDto'
        signatureFileBase64:
          type: string
          description: Файл с информацией о подписи в формате Base64
          nullable: true
      additionalProperties: false
      description: Информация о подписи файла
    Api.Controllers.External.Document.Dto.Response.Dto.SigningEmployeeInfoDto:
      type: object
      properties:
        inn:
          type: string
          description: ИНН
          nullable: true
        kpp:
          type: string
          description: КПП
          nullable: true
        fullName:
          type: string
          description: Полное наименование компании с ОПФ
          nullable: true
        isHead:
          type: boolean
          description: Является ли сотрудник руководителем
        position:
          type: string
          description: Должность
          nullable: true
        isCompanyDocumentsRecipient:
          type: boolean
          description: Является ли сотрудник контатным лицом
        procuratoryId:
          type: integer
          description: Идентификатор доверенности
          format: int32
          nullable: true
        procuratoryIssueDateTimeUtc:
          type: string
          description: Дата начала действия прав
          format: date-time
          nullable: true
        procuratoryRevokeDateTimeUtc:
          type: string
          description: Дата окончания действия прав
          format: date-time
          nullable: true
      additionalProperties: false
      description: Информация о сотруднике и компании, который подписал файл
    Api.Controllers.External.Document.Dto.Response.Dto.TransactionInfoResponseDto:
      type: object
      properties:
        fileId:
          type: string
          description: ID файла
          nullable: true
      additionalProperties: false
      description: Информация о транзакции
    Api.Controllers.External.Document.Dto.Response.GenerateLinkResponse:
      type: object
      properties:
        link:
          type: string
          description: Ссылка на подпись документа
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="!:DocumentExternalController.GenerateLinkAsync" />
    Api.Controllers.External.Document.Dto.Response.GetContainerResponse:
      type: object
      properties:
        containerId:
          type: string
          description: ID контейнера
          format: uuid
        transactionList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.TransactionInfoResponseDto'
          description: Список транзакций контейнера
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentContainerExternalController.CreateForSuitableAsync(System.Int32)" />
    Api.Controllers.External.Document.Dto.Response.GetDocumentCommentListResponse:
      type: object
      properties:
        commentList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.DocumentCommentResponse'
          description: Комментарии
          nullable: true
      additionalProperties: false
      description: Список комментариев к документу
    Api.Controllers.External.Document.Dto.Response.GetDocumentHistoryResponse:
      type: object
      properties:
        documentHistoryList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.DocumentHistoryDto'
          description: Список истории по документам
          nullable: true
      additionalProperties: false
      description: Выходная модель для запроса истории документа
    Api.Controllers.External.Document.Dto.Response.GetDocumentHubByFiltersResponse:
      type: object
      properties:
        documentList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.GetDocumentHubByFiltersResultDto'
          description: Список документов
          nullable: true
      additionalProperties: false
      description: Выходная модель для '<inheritdoc cref="M:Api.Controllers.External.Document.DocumentExternalController.GetDocumentByFiltersAsync(Api.Controllers.External.Document.Dto.Request.GetDocumentHubByFiltersRequest,AutoMapper.IMapper)" />'
    Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse:
      type: object
      properties:
        recipientInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.DocumentRecipientInfoDto'
          description: Список получателей документа
          nullable: true
        documentCode:
          type: string
          description: Код документа
          nullable: true
        documentType:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentType'
        title:
          type: string
          description: Заголовок
          nullable: true
        documentStatus:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentStatus'
        senderGuid:
          type: string
          description: Идентификатор пользователя-отправителя
          nullable: true
        isEnableEdit:
          type: boolean
          description: Можно ли редактировать маршрут
        documentRouteType:
          $ref: '#/components/schemas/NopaperDocumentLib.SigningParty.Enum.SigningPartyQueueType'
        createTimeUtc:
          type: string
          description: Дата создания
          format: date-time
        additionalInfo:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse+AdditionalInfoDto'
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentExternalController.GetDocumentInfoAsync(System.Int32)" />
    Api.Controllers.External.Document.Dto.Response.GetDocumentInfoResponse+AdditionalInfoDto:
      type: object
      properties:
        scheme:
          type: string
          description: Название схемы данных
          nullable: true
        dataJson:
          type: string
          description: Дополнительные данные
          nullable: true
      additionalProperties: false
      description: Дополнительная информация о документе
    Api.Controllers.External.Document.Dto.Response.GetSignatureFileListResponse:
      type: object
      properties:
        signatureFileList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.FileResultDto'
          description: Список файлов подписей
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentFileExternalController.GetSignatureFileListAsync(System.String,System.Int32)" />
    Api.Controllers.External.Document.Dto.Response.GetSignatureListResponse:
      type: object
      properties:
        signatureFileList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Response.Dto.SignatureFileResponseDto'
          description: Список информации о подписи для файла документа
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Document.DocumentFileExternalController.GetSignatureListAsync(System.String,System.Int32)" />
    Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.Dto.PrivilegedPermissionRequestDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.Hub.Employee.HubEmployeeExternalController.ChangeAsync(Api.Controllers.External.Hub.Employee.Dto.Request.ChangeRightsEmployeeRequest,Api.UseCaseManagers.Employee.Interfaces.IEmployeeUpdateUseCaseManager)
    Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Request.Dto.PrivilegedPermissionRequestDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.Hub.Employee.HubEmployeeExternalController.CreateAsync(Api.Controllers.External.Hub.Employee.Dto.Request.CreateEmployeeRequest,Api.UseCaseManagers.Employee.Interfaces.ICreateEmployeeUseCaseManager)
    Api.Controllers.External.Hub.Employee.Dto.Response.EmployeeExtendedInfoResponse:
      type: object
      properties:
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
        generalCertificateStatus:
          $ref: '#/components/schemas/SigningLib.Certificates.Enums.SigningCertificateProviderStatus'
        isCompanyDocumentsRecipient:
          type: boolean
          description: Данный сотрудник является ли получателем документов по умолчанию
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        fullName:
          type: string
          description: ФИО пользователя
          nullable: true
        simplePermissionList:
          type: array
          items:
            type: string
          description: "Список обычных прав\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        privilegedPermissionDtoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.PrivilegedPermissionResponseDto'
          description: "Список прав, которые требуют доверенности\r\nNopaperProfileUlLib.Permission.Constants.PermissionSystemName"
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isHead:
          type: boolean
          description: Является ли пользователь руководителем
      additionalProperties: false
      description: Расширенная информация о сотруднике
    Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeExtendedListResponse:
      type: object
      properties:
        employeeExtendedInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Hub.Employee.Dto.Response.EmployeeExtendedInfoResponse'
          description: Список Api.Controllers.External.Hub.Employee.Dto.Response.EmployeeExtendedInfoResponse
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.Hub.Employee.HubEmployeeExternalController.GetExtendedListAsync(System.Int32,System.Int32,Api.UseCaseManagers.Employee.Interfaces.IEmployeeGetListUseCaseManager)
    Api.Controllers.External.Hub.Employee.Dto.Response.GetEmployeeListResponse:
      type: object
      properties:
        employeeInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeInfoResponseDto'
          description: Список Api.Controllers.External.Company.Employee.Dto.Response.Dto.EmployeeInfoResponseDto
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.Hub.Employee.HubEmployeeExternalController.GetListAsync(NopaperProfileUlLib.Employee.Enums.EmployeeStatus,Api.UseCaseManagers.Employee.Interfaces.IEmployeeGetListUseCaseManager)
    Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryListResponse:
      type: object
      properties:
        procuratoryList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryResponse'
          description: Список доверенностей сотрудника
          nullable: true
      additionalProperties: false
      description: Доверенность пользователя
    Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.GetEmployeeProcuratoryResponse:
      type: object
      properties:
        id:
          type: integer
          description: Id доверенности
          format: int32
        type:
          $ref: '#/components/schemas/NopaperProfileUlLib.Procuratory.Enums.ProcuratoryType'
        employeeId:
          type: integer
          description: Id сотрудника
          format: int32
        creatingDateTimeUtc:
          type: string
          description: Дата создания
          format: date-time
        beginDateTimeUtc:
          type: string
          description: Дата начала действия
          format: date-time
        endDateTimeUtc:
          type: string
          description: Дата окончания действия
          format: date-time
        fullPowers:
          type: string
          description: Полномочия
          nullable: true
        status:
          $ref: '#/components/schemas/NopaperProfileUlLib.Procuratory.Enums.ProcuratoryStatus'
        externalNumber:
          type: string
          description: Номер доверенности
          nullable: true
        registrationId:
          type: string
          description: Идентификационный гуид доверенности (МЧД)
          format: uuid
          nullable: true
        isNotReissueOffer:
          type: boolean
          description: Не предлагать перевыпуск доверенности
        expires:
          $ref: '#/components/schemas/NopaperProfileUlLib.Procuratory.Enums.ProcuratoryExpireStatus'
        privelegedPermissionList:
          uniqueItems: true
          type: array
          items:
            type: string
          description: Список прав
          nullable: true
        fileList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.ProcuratoryFileInfoResponse'
          description: Список файлов
          nullable: true
      additionalProperties: false
      description: Доверенность пользователя
    Api.Controllers.External.Hub.EmployeeProcuratory.Dto.Response.ProcuratoryFileInfoResponse:
      type: object
      properties:
        fileId:
          type: string
          description: Идентификатор файла
          nullable: true
        fileNameWithExtension:
          type: string
          description: Название файла
          nullable: true
        type:
          $ref: '#/components/schemas/NopaperProfileUlLib.Procuratory.Enums.ProcuratoryFileType'
      additionalProperties: false
      description: Информация о файле
    Api.Controllers.External.HubKedo.Units.Dto.Request.UnitAddRequest:
      type: object
      properties:
        name:
          type: string
          description: Название отдела
          nullable: true
      additionalProperties: false
      description: Запрос на добавление отдела
    Api.Controllers.External.HubKedo.Units.Dto.Request.UnitUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: Название отдела
          nullable: true
      additionalProperties: false
      description: Модель обновления отдела
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitAddResponse:
      type: object
      properties:
        unitId:
          type: string
          description: ID отдела
          format: uuid
      additionalProperties: false
      description: Результат запроса на добавление отдела
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitEmployeeExtendedResponse:
      type: object
      properties:
        fullName:
          type: string
          description: ФИО
          nullable: true
        position:
          type: string
          description: Должность
          nullable: true
        isHead:
          type: boolean
          description: Сотрудник является руководителем компании
        unitEmployeeId:
          type: string
          description: ID записи сотрудника отдела
          format: uuid
        employeeId:
          type: integer
          description: ID сотрудника из npp-profile-ul-api
          format: int32
        userGuid:
          type: string
          description: ID пользователя-сотрудника
          nullable: true
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
      additionalProperties: false
      description: Расширенная информация о сотруднике
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitEmployeeResponse:
      type: object
      properties:
        unitEmployeeId:
          type: string
          description: ID записи сотрудника отдела
          format: uuid
        employeeId:
          type: integer
          description: ID сотрудника из npp-profile-ul-api
          format: int32
        userGuid:
          type: string
          description: ID пользователя-сотрудника
          nullable: true
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
      additionalProperties: false
      description: Информация о сотруднике отдела
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitListResponse:
      type: object
      properties:
        unitList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitResponse'
          description: Список отделов
          nullable: true
      additionalProperties: false
      description: Список отделов
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitResponse:
      type: object
      properties:
        unitId:
          type: string
          description: ID отдела
          format: uuid
        name:
          type: string
          description: Название отдела
          nullable: true
        employeeList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitEmployeeResponse'
          description: Список сотрудников отдела
          nullable: true
      additionalProperties: false
      description: Информация об отделе
    Api.Controllers.External.HubKedo.Units.Dto.Response.UnitWithEmployeeExtendedResponse:
      type: object
      properties:
        unitId:
          type: string
          description: ID отдела
          format: uuid
        name:
          type: string
          description: Название отдела
          nullable: true
        companyId:
          type: integer
          description: ID компании
          format: int32
        employeeList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Units.Dto.Response.UnitEmployeeExtendedResponse'
          description: Список сотрудников
          nullable: true
      additionalProperties: false
      description: Информация об отделе с расширенной иноформацией о сотрудниках
    Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest:
      type: object
      properties:
        fromDateUtc:
          type: string
          description: дата начала периода, на который планируются отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: дата конца периода, на который планируются отпуска
          format: date-time
        registrationNumber:
          type: string
          description: Номер документа, формируется в 1C (например, 0000-00001)
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.VacationSchedules.HubVacationScheduleExternalController.CreateVacationScheduleAsync(Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest)
    Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest:
      type: object
      properties:
        fromDateUtc:
          type: string
          description: дата начала периода, на который планируются отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: дата конца периода, на который планируются отпуска
          format: date-time
        registrationNumber:
          type: string
          description: Номер документа, формируется в 1C (например, 0000-00001)
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.VacationSchedules.HubVacationScheduleExternalController.UpdateVacationScheduleAsync(System.Guid,Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.UpdateVacationScheduleRequest)
    Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.CreateVacationScheduleResponse:
      type: object
      properties:
        vacationScheduleId:
          type: string
          description: Id графика отпусков
          format: uuid
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.VacationSchedules.HubVacationScheduleExternalController.CreateVacationScheduleAsync(Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.CreateVacationScheduleRequest)
    Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.GetVacationScheduleListResponse:
      type: object
      properties:
        vacationScheduleId:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.VacationScheduleResponse'
          description: Список графика отпусков
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.VacationSchedules.HubVacationScheduleExternalController.GetVacationScheduleListAsync(Api.Controllers.External.HubKedo.VacationSchedules.Dto.Request.GetVacationScheduleListRequest)
    Api.Controllers.External.HubKedo.VacationSchedules.Dto.Response.VacationScheduleResponse:
      type: object
      properties:
        vacationScheduleId:
          type: string
          description: Id графика отпусков
          format: uuid
        companyId:
          type: integer
          description: Id компании
          format: int32
        fromDateUtc:
          type: string
          description: Дата начала периода, на который планируются отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: Дата конца периода, на который планируются отпуска
          format: date-time
        registrationNumber:
          type: string
          description: Номер документа, формируется в 1C (например, 0000-00001)
          nullable: true
      additionalProperties: false
      description: График отпусков
    Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest:
      type: object
      properties:
        minimumAvailableDaysForWarning:
          $ref: '#/components/schemas/NopaperKedoLib.Common.Entities.NullWriterInt'
        shiftDaysFromNowForStartVacation:
          type: integer
          description: Через сколько дней от текущей даты можно ставить начало отпуска
          format: int32
          nullable: true
        startNoticeIncludeBossAgreement:
          type: boolean
          description: Должен ли руководитель согласовать уведомление
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.VacationSettings.HubVacationSettingsExternalController.UpdateVacationSettingsAsync(Api.Controllers.External.HubKedo.VacationSettings.Dto.Request.UpdateVacationSettingsRequest)
    Api.Controllers.External.HubKedo.VacationSettings.Dto.Response.GetVacationSettingsResponse:
      type: object
      properties:
        minimumAvailableDaysForWarning:
          type: integer
          description: Начиная с какого количества остатка дней отпуска сотруднику будет показано предупреждение. Если null предупреждения не будет
          format: int32
          nullable: true
        shiftDaysFromNowForStartVacation:
          type: integer
          description: Через сколько дней от текущей даты можно ставить начало отпуска
          format: int32
        startNoticeIncludeBossAgreement:
          type: boolean
          description: Должен ли руководитель согласовать уведомление
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.VacationSettings.HubVacationSettingsExternalController.GetVacationSettingsAsync
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.CheckNewVacationDatesRequest:
      type: object
      properties:
        vacationId:
          type: string
          description: Id отпуска
          format: uuid
        newDateList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.NewVacationDateRequest'
          description: На какие даты перенесен отпуск
          nullable: true
      additionalProperties: false
      description: Запрос на проверку дат отпуска
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest:
      type: object
      properties:
        vacationScheduleId:
          type: string
          description: Id графика отпусков
          format: uuid
        employeePhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        fromDateUtc:
          type: string
          description: Дата начала отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: Дата окончания отпуска
          format: date-time
        vacationType:
          $ref: '#/components/schemas/NopaperKedoLib.Vacations.Enums.VacationType'
        vacationDays:
          type: integer
          description: Количество дней отпуска
          format: int32
        description:
          type: string
          description: Примечание
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.CreateVacationAsync(Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest:
      type: object
      properties:
        vacationScheduleId:
          type: string
          description: Id графика отпусков
          format: uuid
        vacationList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Request.VacationRequest'
          description: Отпуска в графике
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.ImportVacationListAsync(Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.NewVacationDateRequest:
      type: object
      properties:
        fromDateUtc:
          type: string
          description: Дата начала отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: Дата окончания отпуска
          format: date-time
      additionalProperties: false
      description: Даты переноса отпуска
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest:
      type: object
      properties:
        fromDateUtc:
          type: string
          description: Дата начала отпуска
          format: date-time
          nullable: true
        untilDateUtc:
          type: string
          description: Дата окончания отпуска
          format: date-time
          nullable: true
        vacationType:
          $ref: '#/components/schemas/NopaperKedoLib.Vacations.Enums.VacationType'
        vacationDays:
          type: integer
          description: Количество дней отпуска
          format: int32
          nullable: true
        description:
          type: string
          description: Примечание
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.UpdateVacationAsync(System.Guid,Api.Controllers.External.HubKedo.Vacations.Dto.Request.UpdateVacationRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Request.VacationRequest:
      type: object
      properties:
        employeePhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        fromDateUtc:
          type: string
          description: Дата начала отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: Дата конца отпуска
          format: date-time
        vacationType:
          $ref: '#/components/schemas/NopaperKedoLib.Vacations.Enums.VacationType'
        vacationDays:
          type: integer
          description: Количество дней отпуска
          format: int32
        description:
          type: string
          description: Примечание
          nullable: true
      additionalProperties: false
      description: Отпуск
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesErrorDataResponse:
      type: object
      properties:
        validationRule:
          $ref: '#/components/schemas/NopaperKedoLib.Vacations.Enums.VacationValidationRule'
        isCritical:
          type: boolean
          description: Ошибка критическая?
        message:
          type: string
          description: Текст ошибки
          nullable: true
      additionalProperties: false
      description: Ошибка проверки дат
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesResponse:
      type: object
      properties:
        isValid:
          type: boolean
          description: Даты валидны? (нет критических ошибок)
        message:
          type: string
          description: Сообщение с ошибками (и критическими, и не критическими)
          nullable: true
        errorList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.CheckNewVacationDatesErrorDataResponse'
          description: Список ошибок
          nullable: true
      additionalProperties: false
      description: Ответ на запрос проверки дат отпуска
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.CreateVacationResponse:
      type: object
      properties:
        vacationId:
          type: string
          description: Id отпуска
          format: uuid
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.CreateVacationAsync(Api.Controllers.External.HubKedo.Vacations.Dto.Request.CreateVacationRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.GetVacationListResponse:
      type: object
      properties:
        vacationList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.Vacations.Dto.Response.VacationResponse'
          description: Список отпусков
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.GetVacationListAsync(Api.Controllers.External.HubKedo.Vacations.Dto.Request.GetVacationListRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.ImportVacationListResponse:
      type: object
      properties:
        successImportPhoneList:
          type: array
          items:
            type: string
            description: Сущность номера телефона
          description: Номера телефонов сотрудников, по которым успешно импортированы отпуска
          nullable: true
        notFoundUserPhoneList:
          type: array
          items:
            type: string
            description: Сущность номера телефона
          description: Номера телефонов, по которым не найдено пользователей
          nullable: true
        notFoundEmployeePhoneList:
          type: array
          items:
            type: string
            description: Сущность номера телефона
          description: Номера телефонов, по которым не найдено сотрудников
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.HubKedo.Vacations.HubVacationExternalController.ImportVacationListAsync(Api.Controllers.External.HubKedo.Vacations.Dto.Request.ImportVacationListRequest)
    Api.Controllers.External.HubKedo.Vacations.Dto.Response.VacationResponse:
      type: object
      properties:
        vacationId:
          type: string
          description: Id отпуска
          format: uuid
        vacationScheduleId:
          type: string
          description: Id графика отпусков
          format: uuid
        employeeId:
          type: integer
          description: Id сотрудника
          format: int32
        fromDateUtc:
          type: string
          description: Дата начала отпуска
          format: date-time
        untilDateUtc:
          type: string
          description: Дата окончания отпуска
          format: date-time
        vacationType:
          $ref: '#/components/schemas/NopaperKedoLib.Vacations.Enums.VacationType'
        vacationDays:
          type: integer
          description: Количество календарных дней отпуска
          format: int32
        description:
          type: string
          description: Примечание
          nullable: true
        displayPeriod:
          type: string
          description: Строка с периодом отпуска для отображения
          nullable: true
      additionalProperties: false
      description: Отпуск
    Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.EmployeeAvailableDays:
      type: object
      properties:
        employeePhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        baseVacationAvailableDays:
          type: number
          description: Остаток дней по основному отпуску
          format: double
        additionalVacationAvailableDays:
          type: number
          description: Остаток дней по дополнительно отпуску
          format: double
      additionalProperties: false
      description: Информация об остатках дней отпуска сотрудника
    Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest:
      type: object
      properties:
        employeeAvailableDaysList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.EmployeeAvailableDays'
          description: Список оставшихся дней отпуска сотрудников
          nullable: true
      additionalProperties: false
      description: Входная модель для M:Api.Controllers.External.HubKedo.VacationsAvailableDays.HubVacationAvailableDaysExternalController.ImportAvailableDaysAsync(Api.Controllers.External.HubKedo.VacationsAvailableDays.Dto.Request.ImportAvailableDaysRequest,Api.UseCaseManagers.Kedo.VacationAvailableDays.Managers.Interfaces.IVacationAvailableDaysUseCaseManager)
    Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest:
      type: object
      properties:
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        name:
          type: string
          description: Имя пользователя
          nullable: true
        surname:
          type: string
          description: Фамилия пользователя
          nullable: true
        patronymic:
          type: string
          description: Отчество пользователя
          nullable: true
        isShortTimePassword:
          type: boolean
          description: Выдать пароль с коротким временем жизни
        notificationLocationType:
          $ref: '#/components/schemas/NopaperPartnerLib.ProfileFl.Enums.NotificationLocationType'
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/NopaperProfileFlLib.Enums.Gender'
        passportData:
          $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.PassportDataRequest'
      additionalProperties: false
      description: Входная модель для '<inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.CreateProfileFlAsync(Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest)" />'
    Api.Controllers.External.ProfileFl.Dto.Request.PassportDataRequest:
      type: object
      properties:
        series:
          type: string
          description: Серия паспорта
          nullable: true
        number:
          type: string
          description: Номер паспорта
          nullable: true
        issuedBy:
          type: string
          description: Кем выдан
          nullable: true
        issuingDate:
          type: string
          description: Дата выдачи
          format: date-time
          nullable: true
        issuerDepartmentCode:
          type: string
          description: Код организации, выдавшей паспорт
          nullable: true
        birthPlace:
          type: string
          description: Место рождения
          nullable: true
      additionalProperties: false
      description: Паспортные данные пользователя
    Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        name:
          type: string
          description: Имя
          nullable: true
        surname:
          type: string
          description: Фамилия
          nullable: true
        patronymic:
          type: string
          description: Отчество
          nullable: true
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/NopaperProfileFlLib.Enums.Gender'
        passportData:
          $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.PassportDataRequest'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.EditProfileFlAsync(Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlEditingRequest)" />
    Api.Controllers.External.ProfileFl.Dto.Request.ProfileFlWithAnyPhoneNumberCreatingRequest:
      type: object
      properties:
        userPhone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        name:
          type: string
          description: Имя пользователя
          nullable: true
        surname:
          type: string
          description: Фамилия пользователя
          nullable: true
        patronymic:
          type: string
          description: Отчество пользователя
          nullable: true
        isShortTimePassword:
          type: boolean
          description: Выдать пароль с коротким временем жизни
        notificationLocationType:
          $ref: '#/components/schemas/NopaperPartnerLib.ProfileFl.Enums.NotificationLocationType'
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/NopaperProfileFlLib.Enums.Gender'
        passportData:
          $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Request.PassportDataRequest'
      additionalProperties: false
    Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.SendOneTimePasswordAsync(Api.Controllers.External.ProfileFl.Dto.Request.SendingOneTimePasswordRequest)" />>
    Api.Controllers.External.ProfileFl.Dto.Response.CreateProfileSecretCodeResponse:
      type: object
      properties:
        secretCode:
          type: string
          description: Секретный код для авторизации
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.CreateSecretCodeAsync(System.String)" />
    Api.Controllers.External.ProfileFl.Dto.Response.Dto.EmployeeCompanyInfoDto:
      type: object
      properties:
        inn:
          type: string
          description: ИНН
          nullable: true
        kpp:
          type: string
          description: КПП
          nullable: true
        shortName:
          type: string
          description: Краткое наименование
          nullable: true
      additionalProperties: false
      description: Информация о компании где ФЛ является сотрудником
    Api.Controllers.External.ProfileFl.Dto.Response.GetEmployeeCompanyListByFlInfoResponse:
      type: object
      properties:
        employeeInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.ProfileFl.Dto.Response.Dto.EmployeeCompanyInfoDto'
          description: Список Api.Controllers.External.ProfileFl.Dto.Response.Dto.EmployeeCompanyInfoDto>
          nullable: true
      additionalProperties: false
      description: Выходная модель для M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.GetEmployeeCompanyListAsync(Api.Controllers.External.ProfileFl.Dto.Request.GetEmployeeCompanyListByFlInfoRequest)
    Api.Controllers.External.ProfileFl.Dto.Response.GetUserGuidByPhoneResponse:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.GetUserGuidByPhoneNumberAsync(CoreLib.Entities.Models.PhoneEntity.Phone)" />
    Api.Controllers.External.ProfileFl.Dto.Response.GetUserPhoneByUserGuidResponse:
      type: object
      properties:
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.GetPhoneByUserGuidAsync(System.String,NopaperProfileFlLib.Services.Interfaces.INopaperProfileFlConnectionService)" />
    Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlCreatingResponse:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.ProfileFl.ProfileFlExternalController.CreateProfileFlAsync(Api.Controllers.External.ProfileFl.Dto.Request.ExternalProfileFlCreatingRequest)" />
    Api.Controllers.External.ProfileFl.Dto.Response.ProfileFlWithAnyPhoneNumberCreatingResponse:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
    Api.Controllers.External.Signing.Dto.Response.Dto.CertificateIntoDto:
      type: object
      properties:
        certificateId:
          type: string
          description: Идентификатор сертификата
          format: uuid
        status:
          $ref: '#/components/schemas/SigningLib.Certificates.Enums.SigningCertificateProviderStatus'
        issuedDateTimeUtc:
          type: string
          description: Время начала действия
          format: date-time
        validUntilDateTimeUtc:
          type: string
          description: Время окончания действия
          format: date-time
        ownerName:
          type: string
          description: ФИО владельца
          nullable: true
        ownerGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        customData:
          description: Дополнительная информация о сертификате
          nullable: true
      additionalProperties: false
      description: Информация о сертификате PC Server
    Api.Controllers.External.Signing.Dto.Response.GetCertificateListResponse:
      type: object
      properties:
        certificateInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Signing.Dto.Response.Dto.CertificateIntoDto'
          description: Список сертификатов сотрудника
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.SigningExternalController.GetListAsync(System.String)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileDto:
      type: object
      properties:
        fileNameWithExtension:
          type: string
          description: Название файла с расширением
          nullable: true
        fileBase64:
          type: string
          description: Файл в base64
          nullable: true
        csrFileType:
          $ref: '#/components/schemas/ItmLib.Csr.Enums.CsrFileType'
      additionalProperties: false
      description: Информация о файле, который прикрепляется к заявке
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest:
      type: object
      properties:
        attachingFileList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileDto'
          description: Список файлов
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrFileExternalController.AttachingFileListAsync(System.Guid,Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest:
      type: object
      properties:
        login:
          type: string
          description: Логин партнёра в системе АТМ
          nullable: true
        password:
          type: string
          description: Пароль партнёра в системе АТМ
          nullable: true
      additionalProperties: false
      description: Входная модель для  <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrExternalController.CompletingIdentificationProfileAsync(System.Guid,Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CompletingIdentificationProfileRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Ид. пользователя
          nullable: true
        selfLicense:
          type: boolean
          description: Использование собственное лицензии
        tariffId:
          type: string
          description: Идентификатор тарифа
          nullable: true
        licenseId:
          type: string
          description: Идентификатор лицензии
          nullable: true
        tariffType:
          $ref: '#/components/schemas/ItmLib.Certificates.Enums.ItmTariff'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmExternalController.CreateAsync(Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest:
      type: object
      properties:
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
        name:
          type: string
          description: Имя пользователя
          nullable: true
        surname:
          type: string
          description: Фамилия пользователя
          nullable: true
        patronymic:
          type: string
          description: Отчество пользователя
          nullable: true
        snils:
          type: string
          description: СНИЛС
          nullable: true
        inn:
          type: string
          description: ИНН
          nullable: true
        regionRowId:
          type: string
          description: Идентификатор региона пользователя
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
        passportSeries:
          type: string
          description: Серия паспорта
          nullable: true
        passportNumber:
          type: string
          description: Номер паспорта
          nullable: true
        passportIssuer:
          type: string
          description: Кем выдан
          nullable: true
        passportIssuedDate:
          type: string
          description: Дата выдачи
          format: date-time
          nullable: true
        passportDepartmentCode:
          type: string
          description: Код организации, выдавшей паспорт
          nullable: true
        birthPlace:
          type: string
          description: Место рождения
          nullable: true
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/SigningLib.Common.Enums.Gender'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrExternalController.FillingDataAsync(System.Guid,Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.FillProfileDataRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.AttachingFileListResponse:
      type: object
      properties:
        fileIdList:
          type: array
          items:
            type: string
          description: Список идентификаторов файлов
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrFileExternalController.AttachingFileListAsync(System.Guid,Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.AttachingFileListRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.CreatingCertificateItmResponse:
      type: object
      properties:
        certificateId:
          type: string
          description: Идентификатор сертификата
          format: uuid
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmExternalController.CreateAsync(Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Request.CreatingCertificateItmRequest)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.DownloadOfertaTemplateResponse:
      type: object
      properties:
        fileBase64:
          type: string
          description: Тело файла шаблона оферты в BASE64
          nullable: true
        fileNameWithExtension:
          type: string
          description: Имя файла с расширением
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrFileExternalController.DownloadOfertaTemplateAsync(System.Guid)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.FileCommentInfoDto:
      type: object
      properties:
        fileType:
          $ref: '#/components/schemas/ItmLib.Csr.Enums.CsrFileType'
        commentList:
          type: array
          items:
            type: string
          description: Комментарии к документу, если ранее при загрузке были ошибки
          nullable: true
      additionalProperties: false
      description: Комментарии к определенному типу файлов
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCommentForCsrFileResponse:
      type: object
      properties:
        fileCommentList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.FileCommentInfoDto'
          description: Список комментариев для всех типов файлов
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrFileExternalController.GettingCommentAsync(System.Guid)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingCsrInfoResponse:
      type: object
      properties:
        statusCode:
          $ref: '#/components/schemas/ItmLib.Csr.Enums.CsrStatus'
        statusName:
          type: string
          description: Статусное сообщение
          nullable: true
          readOnly: true
        failed:
          type: boolean
          description: В процессе выполнения сценария статуса произошла ошибка
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.CertificateMyDssItmCsrExternalController.GettingCsrInfoAsync(System.Guid)" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.GettingRegionListResponse:
      type: object
      properties:
        regionInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.RegionInfoDto'
          description: список <inheritdoc cref="T:Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.RegionInfoDto" />
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.Itm.CertificateItmHandbookExternalController.GettingRegionListAsync" />
    Api.Controllers.External.Signing.Itm.CertificateMyDssItm.Dto.Response.RegionInfoDto:
      type: object
      properties:
        id:
          type: string
          description: ID региона для передачи в АТМ
          nullable: true
        code:
          type: integer
          description: Код региона
          format: int32
        name:
          type: string
          description: Название региона с кодом
          nullable: true
      additionalProperties: false
      description: Информация о регионе
    Api.Controllers.External.Signing.PC.CertificatePC.Dto.Response.CertificatePCCreatingResponse:
      type: object
      properties:
        certificateId:
          type: string
          description: Идентификатор сертификата
          format: uuid
      additionalProperties: false
      description: Выходная модель для Создания сертификата
    Api.Controllers.External.Signing.PC.Dto.Response.CheckingCertificateReadyForAcceptResponse:
      type: object
      properties:
        isReadyForAccept:
          type: boolean
          description: Можно ли принять акт признания ключа
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.PC.SigningPCExternalController.CheckForReadyForAcceptAsync(System.Guid)" />
    Api.Controllers.External.Signing.PC.Dto.Response.GetActAcceptanceKeyResponse:
      type: object
      properties:
        fileBase64:
          type: string
          description: Файл акта признания ключа в формате base64
          nullable: true
        fileNameWithExtension:
          type: string
          description: Имя файла с расширением
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.External.Signing.SigningExternalController.GetListAsync(System.String)" />
    Api.Controllers.Internal.ClientApi.Dto.Request.ClientApiUpdatingRequest:
      type: object
      properties:
        contactEmail:
          $ref: '#/components/schemas/Core.Entities.NullWriter.NullWriterClass`1[[CoreLib.Entities.Models.EmailEntity.Email, CoreLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'
        partnerName:
          type: string
          description: Партнерская метка
          nullable: true
      additionalProperties: false
    Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest:
      type: object
      properties:
        companyId:
          type: integer
          description: Идентификатор компании
          format: int32
        roleList:
          type: array
          items:
            type: string
          description: Список ролей
          nullable: true
        ipAddressList:
          type: array
          items:
            type: string
          description: Список разрешенных ip-адресов
          nullable: true
        name:
          type: string
          description: Название концентратора
          nullable: true
        uri:
          type: string
          description: путь для отправки запросов концентратору
          format: uri
          nullable: true
        isNeedCreateKey:
          type: boolean
          description: Нужно создавать ключ концентратору?
        contactEmail:
          type: string
          description: Сущность электронная почта
          nullable: true
      additionalProperties: false
      description: Входная модель для запроса <inheritdoc cref="M:Api.Controllers.Internal.ClientApi.ClientApiInternalController.CreateClientApiAsync(Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest)" />
    Api.Controllers.Internal.ClientApi.Dto.Response.CreateClientApiResponse:
      type: object
      properties:
        Id:
          type: integer
          description: Идентификатор концентратора
          format: int32
        companyId:
          type: integer
          description: Идентификатор компании из ClientUl
          format: int32
        key:
          type: string
          description: Ключ концентратора
          format: uuid
        partnerName:
          type: string
          description: Название концентратора
          nullable: true
        createDateUtc:
          type: string
          description: Дата создания в UTC
          format: date-time
        isActive:
          type: boolean
          description: активна ли данная сущность
      additionalProperties: false
      description: Выходная модель для запроса <inheritdoc cref="M:Api.Controllers.Internal.ClientApi.ClientApiInternalController.CreateClientApiAsync(Api.Controllers.Internal.ClientApi.Dto.Request.CreateClientApiRequest)" />
    Api.Controllers.Internal.ClientApi.Dto.Response.GetClientApiResponse:
      type: object
      properties:
        keyInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse'
          description: Список ключей концентратора
          nullable: true
        companyId:
          type: integer
          description: Идентификатор компании из ClientUl
          format: int32
        partnerName:
          type: string
          description: Название концентратора
          nullable: true
        createDateUtc:
          type: string
          description: Дата создания в UTC
          format: date-time
        isActive:
          type: boolean
          description: активна ли данная сущность
        contactEmail:
          type: string
          description: Сущность электронная почта
          nullable: true
      additionalProperties: false
      description: Выходная модель для запроса <inheritdoc cref="M:Api.Controllers.Internal.ClientApi.ClientApiInternalController.GetClientApiAsync(System.Int32)" />
    Api.Controllers.Internal.ClientApiCustomer.Dto.Response.SetPartnerNameForCustomerFlResponse:
      type: object
      properties:
        notFoundPhoneList:
          type: array
          items:
            type: string
            description: Сущность номера телефона
          description: Список не найденных пользователей по номеру телефона
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Internal.ClientApiCustomer.ClientApiCustomerByFlInternalController.SetPartnerNameForCustomerFlAsync(Microsoft.AspNetCore.Http.IFormFile,System.String)" />
    Api.Controllers.Internal.Document.Response.CachedNotFoundDocumentResponse:
      type: object
      properties:
        notFoundDocumentStatList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.Internal.Document.Response.NotFoundDocumentStatsDtoV2'
          nullable: true
      additionalProperties: false
    Api.Controllers.Internal.Document.Response.NotFoundDocumentStatsDtoV2:
      type: object
      properties:
        documentId:
          type: integer
          format: int32
        apiKey:
          type: string
          format: uuid
        countRequests:
          type: integer
          format: int32
      additionalProperties: false
    Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest:
      type: object
      properties:
        clientApiId:
          type: integer
          description: Идентификатор концентратора
          format: int32
        roleList:
          type: array
          items:
            type: string
          description: Список ролей
          nullable: true
        ipAddressList:
          type: array
          items:
            type: string
          description: Список разрешенных ip-адресов
          nullable: true
      additionalProperties: false
      description: Входная модель для запроса <inheritdoc cref="M:Api.Controllers.Internal.Key.KeyInternalController.CreateKeyAsync(Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest)" />
    Api.Controllers.Internal.Key.Dto.Response.KeyCreatingResponse:
      type: object
      properties:
        key:
          type: string
          description: Значение ключа
          format: uuid
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Internal.Key.KeyInternalController.CreateKeyAsync(Api.Controllers.Internal.Key.Dto.Request.CreateKeyRequest)" />
    Api.Controllers.Internal.Key.Dto.Response.KeyInfoResponse:
      type: object
      properties:
        roleList:
          type: array
          items:
            type: string
          description: Список ролей
          nullable: true
        ipAddressList:
          type: array
          items:
            type: string
          description: Список разрешенных ip-адресов
          nullable: true
        key:
          type: string
          description: Ключ концентратора
          format: uuid
      additionalProperties: false
      description: Информация о ключе
    Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest:
      type: object
      properties:
        clientApiId:
          type: integer
          description: Ид. концентратора
          format: int32
        userId:
          type: string
          description: Идентификатор пользователя
          nullable: true
        operatorLevel:
          $ref: '#/components/schemas/NopaperPartnerLib.Operator.Enums.OperatorLevelEnum'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Internal.Operator.OperatorInternalController.CreatingAsync(Api.Controllers.Internal.Operator.Dto.Request.CreatingOperatorRequest)" />
    Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest:
      type: object
      properties:
        clientApiId:
          type: integer
          description: Ид. концентратора
          format: int32
        userId:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Internal.Operator.OperatorInternalController.DeleteAsync(Api.Controllers.Internal.Operator.Dto.Request.DeletingOperatorRequest,Dal.Repositories.Interfaces.IClientApiRepository)" />
    Api.Controllers.Public.Dto.Response.GetHubInfoResponse:
      type: object
      properties:
        partnerName:
          type: string
          nullable: true
      additionalProperties: false
      description: Выходная модель для  <inheritdoc cref="M:Api.Controllers.Public.Hub.HubPublicController.GetHubInfoAsync(Dal.Repositories.Interfaces.IClientApiRepository,Api.Controllers.Public.Dto.Request.GetHubInfoRequest)" />
    Api.Controllers.Public.Dto.Response.GettingOperatorInfoResponse:
      type: object
      properties:
        operatorInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.Public.Dto.Response.OperatorInfoDto'
          description: Список информации об уровнях оператора с привязкой к компании
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.ClientFl.OperatorPublicController.GetOperatorInfoAsync(Dal.Repositories.Interfaces.IOperatorRepository,AutoMapper.IMapper)" />
    Api.Controllers.Public.Dto.Response.OperatorInfoDto:
      type: object
      properties:
        companyId:
          type: integer
          description: Идентификатор компании
          format: int32
        operatorLevel:
          $ref: '#/components/schemas/NopaperPartnerLib.Operator.Enums.OperatorLevelEnum'
      additionalProperties: false
      description: информациЯ об уровне оператора с привязкой к компании
    Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest:
      type: object
      properties:
        title:
          type: string
          description: Заголовок документа
          nullable: true
        documentCode:
          type: string
          description: Код документа
          nullable: true
        documentType:
          $ref: '#/components/schemas/NopaperDocumentLib.Document.Enum.DocumentType'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.Document.DraftPublicController.CreateForAllEmployeeAsync(Api.Controllers.Public.Operator.Document.Dto.Requests.CreateDraftForAllEmployeeRequest,System.Int32)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest:
      type: object
      properties:
        userPhone:
          type: string
          description: Номер телефона
          nullable: true
        email:
          type: string
          description: Почта
          nullable: true
        name:
          type: string
          description: Имя пользователя
          nullable: true
        surname:
          type: string
          description: Фамилия пользователя
          nullable: true
        patronymic:
          type: string
          description: Отчество пользователя
          nullable: true
        isShortTimePassword:
          type: boolean
          description: Выдать пароль с коротким временем жизни
        notificationLocationType:
          $ref: '#/components/schemas/NopaperPartnerLib.ProfileFl.Enums.NotificationLocationType'
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/NopaperProfileFlLib.Enums.Gender'
      additionalProperties: false
      description: Входная модель для '<inheritdoc cref="T:Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest" />'
    Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
        name:
          type: string
          description: Имя
          nullable: true
        surname:
          type: string
          description: Фамилия
          nullable: true
        patronymic:
          type: string
          description: Отчество
          nullable: true
        birthDate:
          type: string
          description: Дата рождения
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/NopaperProfileFlLib.Enums.Gender'
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.EditProfileFlAsync(Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlEditingRequest)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest:
      type: object
      properties:
        countFilter:
          $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingProfileListAsync(Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest:
      type: object
      properties:
        searchPart:
          type: string
          description: Часть, по которой необходимо найти пользователя
          nullable: true
        countFilter:
          $ref: '#/components/schemas/CoreLib.Dal.Base.Repositories.Models.CountFilter'
      additionalProperties: false
      description: Входная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingSuggestProfileListAsync(Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicSuggestProfileFlListRequest)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingCountCreatedProfileResponse:
      type: object
      properties:
        profileCount:
          type: integer
          description: Кол-во зарегистрированных пользователей
          format: int32
      additionalProperties: false
      description: Выходная модель <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingCountCreatedProfileAsync(Dal.Repositories.ClientApiCustomerRepository.Interfaces.IClientApiCustomerByFlRepository)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.GettingVerifiedCompanyInfoListForProfileResponse:
      type: object
      properties:
        companyInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.External.Company.Dto.Response.Dto.GetCompanyInfoResponseDto'
          description: Список компаний
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingVerifiedCompanyListAsync(System.String)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlCreatingResponse:
      type: object
      properties:
        userGuid:
          type: string
          description: Идентификатор пользователя
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.CreatingProfileFlAsync(Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlCreatingRequest)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlGettingResponse:
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор
          nullable: true
        name:
          type: string
          description: Имя
          nullable: true
        surname:
          type: string
          description: Фамилия
          nullable: true
        patronymic:
          type: string
          description: Отчество
          nullable: true
        phone:
          type: string
          description: Телефон
          nullable: true
        email:
          type: string
          description: Эл. почта
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingProfileFlAsync(System.String)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.PublicProfileFlListGettingResponse:
      type: object
      properties:
        profileInfoList:
          type: array
          items:
            $ref: '#/components/schemas/Api.Controllers.Public.Operator.ProfileFl.Dto.Response.ResultDto.PublicProfileFlInfo'
          description: Список пользователей
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.ProfileFl.ProfileFlPublicController.GettingProfileListAsync(Api.Controllers.Public.Operator.ProfileFl.Dto.Request.PublicProfileFlListGettingRequest)" />
    Api.Controllers.Public.Operator.ProfileFl.Dto.Response.ResultDto.PublicProfileFlInfo:
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор
          nullable: true
        fullName:
          type: string
          description: ФИО
          nullable: true
        phone:
          type: string
          description: Сущность номера телефона
          nullable: true
        email:
          type: string
          description: Сущность электронная почта
          nullable: true
      additionalProperties: false
      description: Информация о пользователе
    Api.Controllers.Public.Operator.Signing.PC.PCCertificate.Dto.Response.CertificatePCCreatingResponse:
      type: object
      properties:
        certificateId:
          type: string
          description: Идентификатор сертификата
          format: uuid
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Api.Controllers.Public.Operator.Signing.PC.PCCertificate.CertificatePCPublicController.CreateAsync(System.String,PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct)" />
    Core.Entities.NullWriter.NullWriterClass`1[[Api.Controllers.External.Document.Dto.Request.Dto.AdditionalInfoDto, Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/Api.Controllers.External.Document.Dto.Request.Dto.AdditionalInfoDto'
        getValue:
          nullable: true
          readOnly: true
        isValidWriteNull:
          type: boolean
          description: Нужно ли воспринимат null как консистентное состояние
          default: false
      additionalProperties: false
      description: Сущность для работы с сылочными типами
    Core.Entities.NullWriter.NullWriterClass`1[[CoreLib.Entities.Models.EmailEntity.Email, CoreLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]:
      type: object
      properties:
        value:
          type: string
          description: Значение/состояниеx
          nullable: true
        getValue:
          nullable: true
          readOnly: true
        isValidWriteNull:
          type: boolean
          description: Нужно ли воспринимат null как консистентное состояние
          default: false
      additionalProperties: false
      description: Сущность для работы с сылочными типами
    Core.Entities.NullWriter.NullWriterClass`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]:
      type: object
      properties:
        value:
          type: string
          description: Значение/состояниеx
          nullable: true
        getValue:
          nullable: true
          readOnly: true
        isValidWriteNull:
          type: boolean
          description: Нужно ли воспринимат null как консистентное состояние
          default: false
      additionalProperties: false
      description: Сущность для работы с сылочными типами
    CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Response.SettingGettingByFiltersResponse:
      type: object
      properties:
        dateOfSetUtc:
          type: string
          description: Дата изменения настроек
          format: date-time
        isActive:
          type: boolean
          description: Актуальна ли настройка сейчас
        settingBody:
          description: Тело настроек
          nullable: true
      additionalProperties: false
      description: Выходная модель для <inheritdoc cref="M:Core.AppSettings.AppSettingsDb.Controllers.Internal.CustomDbSettingsInternalController`1.GetSettingListByFiltersAsync(CoreLib.AppSettings.AppSettingsDb.Controllers.Internal.Dto.Request.SettingGettingByFiltersRequest,CoreLib.AppSettings.AppSettingsDb.UseCaseManager.Interfaces.IGetCustomDbSettingsUseCaseManager)" />
    CoreLib.Dal.Base.Repositories.Models.CountFilter:
      type: object
      properties:
        offset:
          type: integer
          description: Сколько пропустить
          format: int32
          nullable: true
        count:
          type: integer
          description: Сколько взять
          format: int32
          nullable: true
      additionalProperties: false
      description: Количественный фильтр
    CoreLib.ErrorCode.Controller.Dto.ErrorCodeResponse:
      type: object
      properties:
        name:
          type: string
          description: название ошибки
          nullable: true
        description:
          type: string
          description: Описание ошибки
          nullable: true
        code:
          type: string
          description: Код ошибки
          nullable: true
        stackTrace:
          type: string
          description: Стэк ошибки (если он есть)
          nullable: true
        innerException:
          description: Внутренняя ошибка
          nullable: true
        customErrorValues:
          type: object
          additionalProperties: {}
          description: Зачения для подстановки в шаблоны текста для ошибок на фронте
          nullable: true
      additionalProperties: false
      description: Модель с ошибкой, которая уходит на фронт
    Dal.Models.ClientApiCustomerDal:
      type: object
      properties:
        clientApiId:
          type: integer
          format: int32
        userGuid:
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        employeeId:
          type: integer
          format: int32
          nullable: true
        id:
          type: integer
          description: Первичный ключ
          format: int32
      additionalProperties: false
    Dal.Models.ClientApiDal:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        partnerName:
          type: string
          nullable: true
        uri:
          type: string
          format: uri
          nullable: true
        createDateUtc:
          type: string
          format: date-time
        isActive:
          type: boolean
        contactEmail:
          type: string
          description: Сущность электронная почта
          nullable: true
        id:
          type: integer
          description: Первичный ключ
          format: int32
      additionalProperties: false
    Dal.Models.CompoundModels.KeyInfoByClientApiAndIpAddressDal:
      type: object
      properties:
        clientApiDal:
          $ref: '#/components/schemas/Dal.Models.ClientApiDal'
        ipAddressDalList:
          type: array
          items:
            $ref: '#/components/schemas/Dal.Models.IpAddressDal'
          nullable: true
      additionalProperties: false
    Dal.Models.IpAddressDal:
      type: object
      properties:
        keyId:
          type: integer
          format: int32
        ipAddress:
          type: string
          nullable: true
        id:
          type: integer
          description: Первичный ключ
          format: int32
      additionalProperties: false
    Dal.Models.RoleDal:
      type: object
      properties:
        alias:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        id:
          type: integer
          description: Первичный ключ
          format: int32
      additionalProperties: false
    ItmLib.Certificates.Enums.ItmTariff:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0 - Unknown,\r\n1 - Pro365,\r\n2 - Lite14,\r\n3 - Lite30"
      format: int32
    ItmLib.Csr.Enums.CsrFileType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 8
      type: integer
      description: "0 - Unknown,\r\n1 - StatementOferta,\r\n2 - ClientWithStatementPhoto,\r\n3 - PassportScan,\r\n8 - CertificateX509"
      format: int32
    ItmLib.Csr.Enums.CsrStatus:
      enum:
        - 0
        - 1010
        - 2010
        - 2020
        - 2030
        - 2035
        - 2037
        - 2040
        - 2050
        - 2060
        - 2070
        - 3010
        - 3020
        - 3030
        - 3040
        - 3050
        - 3060
        - 3070
      type: integer
      description: "0 - Unknown,\r\n1010 - DataCapture,\r\n2010 - ClientInitialization,\r\n2020 - ClientInitializationError,\r\n2030 - UserDocumentsUploading,\r\n2035 - AliasReceiving,\r\n2037 - UserDocumentsSending,\r\n2040 - UserDocumentsReview,\r\n2050 - UserDocumentsCommentsReceiving,\r\n2060 - DataCorrection,\r\n2070 - RequestSigning,\r\n3010 - IdentificationWaiting,\r\n3020 - RequestReview,\r\n3030 - AttachmentsCorrection,\r\n3040 - Issuing,\r\n3050 - Installing,\r\n3060 - Saving,\r\n3070 - Completed"
      format: int32
    Logic.DocumentFile.Model.FileInfoOutput:
      type: object
      properties:
        fileId:
          type: string
          nullable: true
        originNameWithExtension:
          type: string
          nullable: true
        sizeKb:
          type: integer
          format: int32
        originalFileId:
          type: string
          nullable: true
      additionalProperties: false
    Microsoft.Win32.SafeHandles.SafeFileHandle:
      type: object
      properties:
        isAsync:
          type: boolean
          readOnly: true
        isInvalid:
          type: boolean
          readOnly: true
        isClosed:
          type: boolean
          readOnly: true
      additionalProperties: false
    NopaperDocumentLib.Document.Enum.DocumentStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      description: "0 - Unknown,\r\n1 - Draft,\r\n2 - InProgress,\r\n3 - Complete,\r\n4 - Revoked,\r\n5 - Error,\r\n6 - Rejected"
      format: int32
    NopaperDocumentLib.Document.Enum.DocumentType:
      enum:
        - 0
        - 1
      type: integer
      description: "0 - Default,\r\n1 - Kedo"
      format: int32
    NopaperDocumentLib.DocumentComment.Enum.DocumentCommentActionType:
      enum:
        - 0
        - 1
      type: integer
      description: "0 - Unknown,\r\n1 - RevokationNocodeDocumentCreate"
      format: int32
    NopaperDocumentLib.DocumentComment.Enum.PriorityType:
      enum:
        - 0
        - 1
      type: integer
      description: "0 - Unknown,\r\n1 - Common"
      format: int32
    NopaperDocumentLib.Recipient.Enum.RecipientType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Fl,\r\n2 - Ul"
      format: int32
    NopaperDocumentLib.SigningParty.Enum.SignType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0 - Unknown,\r\n1 - Nep,\r\n2 - Kep,\r\n3 - Pep"
      format: int32
    NopaperDocumentLib.SigningParty.Enum.SigningPartyActionType:
      enum:
        - 0
        - 1
        - 4
        - 5
        - 9
        - 11
      type: integer
      description: "0 - Unknown,\r\n1 - SignPerson,\r\n4 - Confirm,\r\n5 - Remind,\r\n9 - SignCompany,\r\n11 - Delegation"
      format: int32
    NopaperDocumentLib.SigningParty.Enum.SigningPartyQueueType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Sequential,\r\n2 - Parallel"
      format: int32
    NopaperDocumentLib.SigningParty.Enum.SigningPartyRemindType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Push,\r\n2 - Email"
      format: int32
    NopaperDocumentLib.SigningParty.Enum.SigningPartyStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0 - Unknown,\r\n1 - NotActive,\r\n2 - Active,\r\n3 - Complete"
      format: int32
    NopaperKedoLib.Common.Entities.NullWriterInt:
      type: object
      properties:
        value:
          type: integer
          description: Значение/состояниеx
          format: int32
          nullable: true
        getValue:
          nullable: true
          readOnly: true
        isValidWriteNull:
          type: boolean
          description: Нужно ли воспринимат null как консистентное состояние
          default: false
      additionalProperties: false
    NopaperKedoLib.Vacations.Enums.VacationType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Base,\r\n2 - Additional"
      format: int32
    NopaperKedoLib.Vacations.Enums.VacationValidationRule:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: "0 - Unknown,\r\n1 - ConflictWithOtherEmployee,\r\n2 - ConflictWithYourself,\r\n3 - CountSourceDaysNotEqualsCountShiftDays,\r\n4 - StartDateEarlierThanAllowed"
      format: int32
    NopaperPartnerLib.Operator.Enums.OperatorLevelEnum:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Uknown,\r\n1 - FirstLevel,\r\n2 - SecondLevel"
      format: int32
    NopaperPartnerLib.ProfileFl.Enums.NotificationLocationType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Phone,\r\n2 - Email"
      format: int32
    NopaperPartnerLib.Settings.DbSetting.Dto.Models.FileSettingsModelRequest:
      type: object
      properties:
        documentRequestFileMaxSizeKb:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    NopaperPartnerLib.Settings.DbSetting.Dto.Models.FrequentRequestProtectionModelRequest:
      type: object
      properties:
        refreshFrequentRequestProtectionSeconds:
          type: integer
          format: int32
          nullable: true
        limitFrequentRequestProtection:
          type: integer
          format: int32
          nullable: true
        isActive:
          type: boolean
          nullable: true
      additionalProperties: false
    NopaperPartnerLib.Settings.DbSetting.Dto.Models.NocodeIntegrationSettingsRequest:
      type: object
      properties:
        partnerNameListForBackwardCompatibility:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    NopaperPartnerLib.Settings.DbSetting.Dto.PartnerApiDbSettingModelRequest:
      type: object
      properties:
        frequentRequestProtectionModel:
          $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.Models.FrequentRequestProtectionModelRequest'
        fileSettingsModel:
          $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.Models.FileSettingsModelRequest'
        nocodeIntegrationSettings:
          $ref: '#/components/schemas/NopaperPartnerLib.Settings.DbSetting.Dto.Models.NocodeIntegrationSettingsRequest'
      additionalProperties: false
    NopaperProfileFlLib.Enums.Gender:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Male,\r\n2 - Female"
      format: int32
    NopaperProfileUlLib.Employee.Enums.EmployeeStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: "0 - Unknown,\r\n1 - Active,\r\n2 - Blocked,\r\n3 - Dismissed,\r\n4 - WasNoLongerHead"
      format: int32
    NopaperProfileUlLib.Procuratory.Enums.ProcuratoryExpireStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0 - Unknown,\r\n1 - IsFresh,\r\n2 - IsExpired,\r\n3 - IsExpires"
      format: int32
    NopaperProfileUlLib.Procuratory.Enums.ProcuratoryFileType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      description: "0 - Unknown,\r\n1 - Generated,\r\n2 - External,\r\n3 - PrintForm,\r\n4 - Mchd,\r\n5 - AnnulmentMchdGenerated,\r\n6 - ConfirmationCreateMchdGenerate,\r\n7 - ConfirmationAnnulateMchdGenerate"
      format: int32
    NopaperProfileUlLib.Procuratory.Enums.ProcuratoryStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      description: "0 - Unknown,\r\n1 - AwaitingVerification,\r\n2 - ReadyForSign,\r\n3 - Signed,\r\n4 - Revoked,\r\n5 - Annulated"
      format: int32
    NopaperProfileUlLib.Procuratory.Enums.ProcuratoryType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: "0 - Unknown,\r\n1 - ForEmployee,\r\n2 - ForEmployeeByPaper,\r\n3 - Mchd,\r\n4 - ExternalMchd"
      format: int32
    PayControlLib.KeyAcceptanceAct.Enums.AcceptingAcceptanceActType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: "0 - Unknown,\r\n1 - ByRest,\r\n2 - Signing,\r\n3 - InFirstSigning"
      format: int32
    PayControlLib.KeyAcceptanceAct.Enums.ResponsiblePartyForAcceptanceAct:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Internal,\r\n2 - External"
      format: int32
    SigningLib.Certificates.Enums.SigningCertificateProviderStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      description: "0 - Unknown,\r\n1 - Template,\r\n2 - Initialization,\r\n3 - InitializationError,\r\n4 - Available,\r\n5 - Blocked,\r\n6 - Deleted,\r\n7 - AttachingError"
      format: int32
    SigningLib.Common.Enums.Gender:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: "0 - Unknown,\r\n1 - Male,\r\n2 - Female"
      format: int32
    SigningLib.Providers.Enums.SigningProviderType:
      enum:
        - 0
        - 1
        - 3
        - 5
        - 6
        - 7
        - 8
        - 9
        - -3
        - -2
        - -1
      type: integer
      description: "0 - Unknown,\r\n1 - PayControl,\r\n3 - PayControlServer,\r\n5 - CryptoToken,\r\n6 - MyDssItm,\r\n7 - PayControlSms,\r\n8 - Goskey,\r\n9 - AutoSign,\r\n-3 - DebugExternalProvider,\r\n-2 - DebugSimpleProvider,\r\n-1 - DebugProvider"
      format: int32
    System.IO.FileStream:
      type: object
      properties:
        handle:
          deprecated: true
        canRead:
          type: boolean
          readOnly: true
        canWrite:
          type: boolean
          readOnly: true
        safeFileHandle:
          $ref: '#/components/schemas/Microsoft.Win32.SafeHandles.SafeFileHandle'
        name:
          type: string
          nullable: true
          readOnly: true
        isAsync:
          type: boolean
        length:
          type: integer
          format: int64
          readOnly: true
        position:
          type: integer
          format: int64
        canSeek:
          type: boolean
          readOnly: true
        canTimeout:
          type: boolean
          readOnly: true
        readTimeout:
          type: integer
          format: int32
        writeTimeout:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: AccessToken от IdentityServer ВМЕСТЕ со словом Bearer, напр. 'Bearer kM1Q0EiLCJ0eXAiOiJK...'
      name: Authorization
      in: header
    X-Api-Key:
      type: apiKey
      description: Ключ доступа к API для интегрирующихся с нами сервисов
      name: X-Api-Key
      in: header
security:
  - Bearer: []
  - X-Api-Key: []
tags:
  - name: SigningPublic
    description: Контроллер для взаимодействия с сертификатами выданными концентраторами
  - name: SigningPCPublic
    description: Контроллер для взаимодействия с сертификатами выданными оператором с типом PC
  - name: CertificatePCPublic
    description: Контроллер для работы с сертификатами PC
  - name: ProfileFlPublic
    description: Контроллер для работы с профилем ФЛ
  - name: DocumentPublic
    description: Контроллер для работы c документом
  - name: DraftPublic
    description: Контроллер для работы черновиком
  - name: CompanyOperatorPublic
    description: Контроллер для работы с компаниями
  - name: VerifiedCompanyOperatorPublic
    description: Контроллер для работы с верифицированной компанией
  - name: EmployeeVerifiedCompanyOperatorPublic
    description: Контроллер для работы с сотрудниками верифицированной компании
  - name: HubPublic
    description: Контроллер для работы с концентратором от лица ФЛ
  - name: OperatorPublic
    description: Контроллер для работы с оператором (от лица пользователя)
  - name: OperatorInternal
    description: Контроллер для работы с оператором концентратора
  - name: KeyInternal
    description: Контроллер для работы с ключом концентратора
  - name: CachedDocumentInternal
    description: Для работы с кешем документов
  - name: ClientApiCustomerByFlInternal
    description: Контроллер для работы с клиентами ФЛ концентратора
  - name: ClientApiInternal
    description: Контроллер для работы с Dal.Models.ClientApiDal
  - name: SigningExternal
    description: Контроллер для взаимодействия с сертификатами выданными концентраторами
  - name: SigningPCExternal
    description: Контроллер для взаимодействия с сертификатами выданными концентраторами
  - name: CertificatePCSmsExternal
    description: Контроллер для взаимодействия с сертификатами PC Sms
  - name: CertificatePCServerExternal
    description: Контроллер для взаимодействия с сертификатами PC Server
  - name: CertificatePCExternal
    description: Контроллер для взаимодействия с сертификатами PC Server
  - name: CertificateItmHandbookExternal
    description: Контроллер для работы с справочной информацией УЦ Itm
  - name: CertificateMyDssItmCsrExternal
    description: Контроллер для работы с заявкой на выпуск сертификата Itm
  - name: CertificateMyDssItmCsrFileExternal
    description: Контроллер для работы с файлами связанными с заявкой на выпуск сертификата Itm
  - name: CertificateMyDssItmExternal
    description: Контроллер для взаимодействия с сертификатами Itm
  - name: ProfileFlExternal
    description: Контроллер для работы с профилем ФЛ
  - name: HubVacationSettingsExternal
    description: Контроллер для работы с настройками отпуска
  - name: HubVacationScheduleExternal
    description: Контроллер для работы с графиком отпусков
  - name: HubVacationAvailableDaysExternal
    description: Контроллер для работы с доступными днями отпуска
  - name: HubVacationExternal
    description: Контроллер для работы с отпуском
  - name: UnitHubKedoExternal
    description: Контроллер связанный с отделами
  - name: HubExternal
    description: Контроллер связанный с настройками концентратора
  - name: HubEmployeeDefaultProfileExternal
    description: Контроллер для установки дефолтного профиля
  - name: HubEmployeeCertificate
    description: Контроллер для работы с сертификатами сотрудников
  - name: HubEmployeeProcuratory
    description: Контроллер для работы с доверенностями сотрудников
  - name: HubEmployeeExternal
    description: Контроллер для работы сотрудниками компании концентратора
  - name: DocumentContainerExternal
    description: Контроллер для контейнеров
  - name: DocumentEmployeeExternal
    description: Контроллер для работы с документом от лица сотрудника
  - name: DocumentExternal
    description: Контроллер для работы с документом
  - name: DocumentFileExternal
    description: Контроллер для работы с файлами документов
  - name: DocumentHistoryExternal
    description: Контроллер для работы с историей документа
  - name: DocumentLinkExternal
    description: Контроллер для генерации ссылок документа
  - name: DocumentSigningExternal
    description: Контроллер для подписи документов
  - name: DocumentSigningPartyRootExternal
    description: Контроллер для работы с корневой signing party
  - name: DraftExternal
    description: Контроллер для работы с черновиком
  - name: CounterpartiesExternal
    description: Контроллер для получения списка контрагентов
  - name: ContainerExternal
    description: Контроллер для работы с контейнером
  - name: CompanyExternal
    description: Контроллер для работы с компаниями
  - name: VerifiedCompanyExternal
    description: Контроллер для работы с верифицированной компанией
  - name: EmployeeDefaultProfileExternal
    description: Контроллер для установки дефолтного профиля
  - name: EmployeeVerifiedCompanyExternal
    description: Контроллер для работы с сотрудниками верифицированной компании
  - name: CabinetExternal
    description: REST API для доступа к кабинетам Nocode через npp-sado-api
  - name: AmoCrmExternal
    description: Контроллер для работы с компаниями
  - name: Error
    description: Информация по ошбикам
